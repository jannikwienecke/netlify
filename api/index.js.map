{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/admin.$model.tsx", "../app/components/combobox.tsx", "../app/utils/helper.ts", "../app/utils/auth.server.ts", "../app/utils/session.server.ts", "../utils/xata.ts", "../app/components/form.tsx", "../app/components/notification.tsx", "../app/components/layout.tsx", "../app/components/table.tsx", "../app/utils/lib/core.ts", "../app/utils/lib/hooks.ts", "../app/utils/lib/react.tsx", "../app/utils/lib/components/form.tsx", "../app/utils/lib/components/slide-over.tsx", "../app/routes/admin.tsx", "../app/routes/api.options.ts", "../app/routes/vacation.tsx", "../app/components/error-boundary.tsx", "../app/utils/misc.ts", "../app/features/vacation/container/activity-booking-bottom-sheet.tsx", "../app/components/bottom-sheet-modal.tsx", "../app/components/icons/index.tsx", "../app/features/vacation/store/vacation-store.ts", "../app/features/vacation/container/hooks/use-activity-booking-bottom-sheet.ts", "../app/features/vacation/container/activity-list.tsx", "../app/components/badge.tsx", "../app/features/vacation/server-functions/main-page.ts", "../app/features/vacation/repos/implementations/activityRepoXata.ts", "../app/features/vacation/repos/implementations/vacationRepoXata.ts", "../app/utils/stuff.server.ts", "../app/features/vacation/container/vacation-date-picker.tsx", "../app/shared/domain/entity.ts", "../app/features/vacation/domain/vacation.tsx", "../app/features/vacation/domain/location.tsx", "../app/shared/domain/value-object.ts", "../app/features/vacation/domain/tag.ts", "../app/features/vacation/domain/activity.ts", "../app/features/vacation/domain/date.ts", "../app/features/vacation/domain/activity-name.ts", "../app/features/vacation/domain/activity-description.ts", "../app/features/vacation/mapper/vacationMapper.ts", "../app/routes/_index.tsx", "../app/routes/signup.tsx", "../app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\n\n// import styles from \"./tailwind.css\";\nimport picker from \"./picker.css\";\nimport styles from \"./tailwind.css\";\n\nexport const links: LinksFunction = () => [\n// { rel: \"stylesheet\", href: cssBundleHref },\n{ rel: \"stylesheet\", href: styles },\n{ rel: \"stylesheet\", href: picker }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full bg-white\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { Layout, Notification, Table } from \"~/components\";\nimport { createPageFunction } from \"~/utils/lib/core\";\nimport { useAdminPage } from \"~/utils/lib/hooks\";\nimport { LibForm, LibProvider, LibSliderOver } from \"~/utils/lib/react\";\nimport { CONFIG } from \"./admin\";\n\nexport const pageFunction = createPageFunction({\n  config: CONFIG,\n});\n\nexport const loader = pageFunction.loader;\n\nexport const action = pageFunction.action;\n\nexport default function AdminModelPage() {\n  return (\n    <LibProvider config={CONFIG}>\n      <Content />\n    </LibProvider>\n  );\n}\n\nconst Content = () => {\n  const {\n    pageTitle,\n    optimisicData,\n    columns,\n    handleClickEdit,\n    handelClickAdd,\n    handelClickDelete,\n    handleClickBulkDelete,\n    addForm,\n    getOverlayProps,\n    getFormProps,\n    getFormFieldProps,\n    getNotificationProps,\n  } = useAdminPage();\n\n  return (\n    <>\n      <Layout>\n        <Table\n          onEdit={handleClickEdit}\n          onAdd={handelClickAdd}\n          onDelete={handelClickDelete}\n          onBulkDelete={handleClickBulkDelete}\n          columns={columns}\n          dataList={optimisicData}\n          title={pageTitle}\n          subtitle=\"Manage locations for your events\"\n        />\n      </Layout>\n\n      <LibSliderOver {...getOverlayProps()}>\n        <LibForm {...getFormProps()}>\n          {addForm.fields.map((field) => {\n            return (\n              <field.Component {...getFormFieldProps(field)} key={field.name} />\n            );\n          })}\n        </LibForm>\n      </LibSliderOver>\n\n      <div className=\"z-50 absolute top-0 -right-0\">\n        <Notification {...getNotificationProps()} />\n      </div>\n    </>\n  );\n};\n", "import { Combobox } from \"@headlessui/react\";\nimport { CheckIcon, ChevronUpDownIcon } from \"@heroicons/react/20/solid\";\nimport { useState } from \"react\";\nimport { classNames } from \"~/utils/helper\";\n\nexport type Color =\n  | \"blue\"\n  | \"red\"\n  | \"green\"\n  | \"yellow\"\n  | \"indigo\"\n  | \"purple\"\n  | \"pink\"\n  | \"gray\"\n  | \"white\";\n\nexport const ComboBox = <\n  TItem extends { name: string; id: string | number; color: Color }\n>({\n  items,\n  onSelect,\n  onQueryChange,\n}: {\n  items: TItem[];\n  onSelect: (item: TItem) => void;\n  onQueryChange?: (query: string) => void;\n}) => {\n  const [query, setQuery] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState<TItem>();\n\n  const filteredItems =\n    query === \"\"\n      ? items\n      : items.filter((item) => {\n          return item.name.toLowerCase().includes(query.toLowerCase());\n        });\n\n  const handleChangeItem = (item: TItem) => {\n    setSelectedItem(item);\n    onSelect(item);\n  };\n\n  const handleQueryChange = (query: string) => {\n    setQuery(query);\n    onQueryChange?.(query);\n  };\n\n  return (\n    <>\n      <Combobox as=\"div\" value={selectedItem} onChange={handleChangeItem}>\n        <Combobox.Label className=\"block text-sm font-medium leading-6 text-gray-900\">\n          Assigned to\n        </Combobox.Label>\n        <div className=\"relative mt-2\">\n          <Combobox.Input\n            className=\"w-full rounded-md border-0 bg-white py-1.5 pl-3 pr-10 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n            onChange={(event) => handleQueryChange(event.target.value)}\n            displayValue={(item: TItem) => item?.name}\n            value={selectedItem?.name}\n            name={selectedItem?.name}\n          />\n          <Combobox.Button className=\"absolute inset-y-0 right-0 flex items-center rounded-r-md px-2 focus:outline-none\">\n            <ChevronUpDownIcon\n              className=\"h-5 w-5 text-gray-400\"\n              aria-hidden=\"true\"\n            />\n          </Combobox.Button>\n\n          {filteredItems.length > 0 && (\n            <Combobox.Options className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n              {filteredItems.map((item) => (\n                <Combobox.Option\n                  key={item.id}\n                  value={item}\n                  className={({ active }) =>\n                    classNames(\n                      \"relative cursor-default select-none py-2 pl-8 pr-4\",\n                      active ? \"bg-indigo-600 text-white\" : \"text-gray-900\"\n                    )\n                  }\n                >\n                  {({ active, selected }) => (\n                    <>\n                      <div className=\"flex items-center\">\n                        {item?.color ? (\n                          <span\n                            className={classNames(\n                              \"inline-block h-2 w-2 flex-shrink-0 rounded-full mr-2\"\n                            )}\n                            style={{\n                              backgroundColor: item.color,\n                            }}\n                            aria-hidden=\"true\"\n                          />\n                        ) : null}\n\n                        <span\n                          className={classNames(\n                            \"truncate\",\n                            selected ? \"font-semibold\" : \"\"\n                          )}\n                        >\n                          {item.name}\n                        </span>\n                      </div>\n\n                      {selected && (\n                        <span\n                          className={classNames(\n                            \"absolute inset-y-0 left-0 flex items-center pl-1.5\",\n                            active ? \"text-white\" : \"text-indigo-600\"\n                          )}\n                        >\n                          <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </span>\n                      )}\n                    </>\n                  )}\n                </Combobox.Option>\n              ))}\n            </Combobox.Options>\n          )}\n        </div>\n      </Combobox>\n    </>\n  );\n};\n", "import { AuthorizationError } from \"remix-auth\";\nimport { authenticator } from \"./auth.server\";\nimport bcrypt from \"bcryptjs\";\nimport { getXataClient } from \"utils/xata\";\n\nexport const isLoggedIn = async (\n  request: Request,\n  options?: {\n    successRedirect?: string | undefined;\n    failureRedirect?: string | undefined;\n  }\n) => {\n  const user = await authenticator.isAuthenticated(\n    request,\n    options || ({} as any)\n  );\n\n  return user;\n};\n\nexport const authenticate = async (request: Request) => {\n  console.log(\"authenticate\");\n\n  await authenticator.authenticate(\"form\", request, {\n    successRedirect: \"/vacation\",\n    // failureRedirect: \"/signup\",\n    throwOnError: true,\n  });\n};\n\nexport const signupAction = async ({ form }: { form: FormData }) => {\n  const email = form.get(\"email\") as string;\n  const password = form.get(\"password\") as string;\n\n  const xata = getXataClient();\n  const user = await xata.db.User.filter({ email }).getFirst();\n\n  if (!user) {\n    console.error(\"wrong email\");\n    throw new AuthorizationError();\n  }\n\n  const passwordsMatch = await bcrypt.compare(\n    password,\n    user.password as string\n  );\n\n  if (!passwordsMatch) {\n    throw new AuthorizationError();\n  }\n\n  return user;\n};\n\nexport function classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport const getCurrentDateString = () => {\n  const currentDate = new Date();\n\n  const values = [\n    currentDate.getFullYear(),\n    currentDate.getMonth() + 1,\n    currentDate.getDate(),\n    currentDate.getHours(),\n    currentDate.getMinutes(),\n  ];\n\n  const parsedValues = values.map((v) => (v < 10 ? `0${v}` : v));\n  const [year, month, day, hours, minutes] = parsedValues;\n  const formattedDate = `${year}-${month}-${day}T${hours}:${minutes}`;\n\n  return formattedDate;\n};\n", "import { Authenticator, AuthorizationError } from \"remix-auth\";\nimport { FormStrategy } from \"remix-auth-form\";\nimport { sessionStorage } from \"./session.server\";\nimport bcrypt from \"bcryptjs\";\nimport { signupAction } from \"./helper\";\nimport { User, getXataClient } from \"utils/xata\";\n\nconst authenticator = new Authenticator<User>(sessionStorage);\n\n// const formStrategy = new FormStrategy(signupAction);\n\nauthenticator.use(\n  new FormStrategy(async ({ form }) => {\n    let email = form.get(\"email\") as string;\n    let password = form.get(\"password\") as string;\n\n    const xata = getXataClient();\n    const user = await xata.db.User.filter({ email }).getFirst();\n\n    if (!user) {\n      console.error(\"wrong email\");\n      throw new AuthorizationError();\n    }\n\n    const passwordsMatch = await bcrypt.compare(\n      password,\n      user.password as string\n    );\n\n    if (!passwordsMatch) {\n      throw new AuthorizationError();\n    }\n\n    return user;\n  }),\n  // each strategy has a name and can be changed to use another one\n  // same strategy multiple times, especially useful for the OAuth2 strategy.\n  \"form\"\n);\n\nexport { authenticator };\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\n\nconst sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"_session\",\n    sameSite: \"lax\",\n    path: \"/\",\n    httpOnly: true,\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nexport { sessionStorage };\n", "// Generated by Xata Codegen 0.23.5. Please do not edit.\nimport { buildClient } from \"@xata.io/client\";\nimport type {\n  BaseClientOptions,\n  SchemaInference,\n  XataRecord,\n} from \"@xata.io/client\";\n\nconst tables = [\n  {\n    name: \"Tag\",\n    columns: [\n      { name: \"label\", type: \"string\", unique: true },\n      { name: \"color\", type: \"link\", link: { table: \"Color\" } },\n    ],\n  },\n  {\n    name: \"User\",\n    columns: [\n      { name: \"email\", type: \"email\", unique: true },\n      { name: \"password\", type: \"string\" },\n    ],\n  },\n  {\n    name: \"Location\",\n    columns: [\n      { name: \"name\", type: \"string\", unique: true },\n      { name: \"description\", type: \"string\" },\n    ],\n  },\n  {\n    name: \"ActivityBooking\",\n    columns: [\n      { name: \"datetime\", type: \"datetime\" },\n      {\n        name: \"isFixedDate\",\n        type: \"bool\",\n        notNull: true,\n        defaultValue: \"false\",\n      },\n      {\n        name: \"activity\",\n        type: \"link\",\n        link: { table: \"AcitivityDescription\" },\n      },\n    ],\n  },\n  {\n    name: \"AcivityTag\",\n    columns: [\n      { name: \"tag\", type: \"link\", link: { table: \"Tag\" } },\n      { name: \"activity\", type: \"link\", link: { table: \"ActivityBooking\" } },\n    ],\n  },\n  {\n    name: \"Vacation\",\n    columns: [\n      {\n        name: \"name\",\n        type: \"string\",\n        notNull: true,\n        defaultValue: \"My Vacation\",\n      },\n      { name: \"user\", type: \"link\", link: { table: \"User\" } },\n      {\n        name: \"startDate\",\n        type: \"datetime\",\n        notNull: true,\n        defaultValue: \"now\",\n      },\n      { name: \"endDate\", type: \"datetime\", notNull: true, defaultValue: \"now\" },\n      { name: \"description\", type: \"text\" },\n      { name: \"location\", type: \"link\", link: { table: \"Location\" } },\n    ],\n  },\n  {\n    name: \"VacationActivity\",\n    columns: [\n      { name: \"vacation\", type: \"link\", link: { table: \"Vacation\" } },\n      { name: \"activity\", type: \"link\", link: { table: \"ActivityBooking\" } },\n    ],\n  },\n  { name: \"Color\", columns: [{ name: \"name\", type: \"string\", unique: true }] },\n  {\n    name: \"AcitivityDescription\",\n    columns: [\n      { name: \"name\", type: \"string\", unique: true },\n      { name: \"description\", type: \"string\" },\n    ],\n  },\n] as const;\n\nexport type SchemaTables = typeof tables;\nexport type InferredTypes = SchemaInference<SchemaTables>;\n\nexport type Tag = InferredTypes[\"Tag\"];\nexport type TagRecord = Tag & XataRecord;\n\nexport type User = InferredTypes[\"User\"];\nexport type UserRecord = User & XataRecord;\n\nexport type Location = InferredTypes[\"Location\"];\nexport type LocationRecord = Location & XataRecord;\n\nexport type ActivityBooking = InferredTypes[\"ActivityBooking\"];\nexport type ActivityBookingRecord = ActivityBooking & XataRecord;\n\nexport type AcivityTag = InferredTypes[\"AcivityTag\"];\nexport type AcivityTagRecord = AcivityTag & XataRecord;\n\nexport type Vacation = InferredTypes[\"Vacation\"];\nexport type VacationRecord = Vacation & XataRecord;\n\nexport type VacationActivity = InferredTypes[\"VacationActivity\"];\nexport type VacationActivityRecord = VacationActivity & XataRecord;\n\nexport type Color = InferredTypes[\"Color\"];\nexport type ColorRecord = Color & XataRecord;\n\nexport type AcitivityDescription = InferredTypes[\"AcitivityDescription\"];\nexport type AcitivityDescriptionRecord = AcitivityDescription & XataRecord;\n\nexport type DatabaseSchema = {\n  Tag: TagRecord;\n  User: UserRecord;\n  Location: LocationRecord;\n  ActivityBooking: ActivityBookingRecord;\n  AcivityTag: AcivityTagRecord;\n  Vacation: VacationRecord;\n  VacationActivity: VacationActivityRecord;\n  Color: ColorRecord;\n  AcitivityDescription: AcitivityDescriptionRecord;\n};\n\nconst DatabaseClient = buildClient();\n\nconst defaultOptions = {\n  databaseURL:\n    \"https://Jannik-Wienecke-s-workspace-hebkta.eu-west-1.xata.sh/db/reiseathleten\",\n};\n\nexport class XataClient extends DatabaseClient<DatabaseSchema> {\n  constructor(options?: BaseClientOptions) {\n    super({ ...defaultOptions, ...options }, tables);\n  }\n}\n\nlet instance: XataClient | undefined = undefined;\n\nexport const getXataClient = () => {\n  if (instance) return instance;\n\n  instance = new XataClient();\n  return instance;\n};\n", "import { FormProps, useFetcher } from \"@remix-run/react\";\nimport { PhotoIcon, UserCircleIcon } from \"@heroicons/react/24/solid\";\nimport { Form as RemixForm } from \"@remix-run/react\";\nimport React from \"react\";\nimport { ComboBox } from \"./combobox\";\n\nexport function Form({\n  title,\n  children,\n  description,\n  SaveButton,\n  onCancel,\n  ...props\n}: {\n  title: string;\n  description?: string;\n  children: React.ReactNode;\n  SaveButton?: React.ReactNode;\n  onCancel?: () => void;\n} & FormProps) {\n  return (\n    <div className=\"space-y-10 divide-y divide-gray-900/10\">\n      <div className=\"flex flex-col gap-x-8 gap-y-8\">\n        <div className=\"px-4 sm:px-0\">\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\n            {title}\n          </h2>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n            {description || \"Update Model Information\"}\n          </p>\n        </div>\n\n        <RemixForm\n          {...props}\n          method=\"POST\"\n          className=\"bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2\"\n        >\n          <div className=\"px-4 py-6 sm:p-8\">\n            <div className=\"max-w-2xl gap-x-6 gap-y-8 flex flex-col\">\n              {children}\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-end gap-x-6 border-t border-gray-900/10 px-4 py-4 sm:px-8\">\n            {SaveButton}\n\n            <button\n              onClick={onCancel}\n              type=\"button\"\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\n            >\n              Cancel\n            </button>\n          </div>\n        </RemixForm>\n      </div>\n    </div>\n  );\n}\n\nconst DefaultInput = ({\n  label,\n  ...props\n}: {\n  label?: string;\n  name: string;\n  error?: string;\n} & React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>) => {\n  return (\n    <div className={`${props.hidden ? \"hidden\" : \"\"}`}>\n      {label ? (\n        <label\n          htmlFor=\"first-name\"\n          className=\"block text-sm font-medium leading-6 text-gray-900\"\n        >\n          {label}\n        </label>\n      ) : null}\n      <div className=\"mt-2\">\n        <input\n          {...props}\n          className={`${\n            props.error ? \"focus:ring-red-600\" : \"focus:ring-indigo-600\"\n          } block w-full pl-4 rounded-md border-[1px] py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset  sm:text-sm sm:leading-6 ${\n            props.hidden ? \"hidden\" : \"\"\n          } ${props.error ? \"border-red-600 border-[1px]\" : \"\"}}`}\n        />\n      </div>\n\n      {props.error ? (\n        <p className=\"mt-2 text-sm text-red-600\" id=\"email-error\">\n          {props.error}\n        </p>\n      ) : null}\n    </div>\n  );\n};\n\nconst ImageInput = () => {\n  return (\n    <div className=\"col-span-full\">\n      <label\n        htmlFor=\"cover-photo\"\n        className=\"block text-sm font-medium leading-6 text-gray-900\"\n      >\n        Cover photo\n      </label>\n      <div className=\"mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10\">\n        <div className=\"text-center\">\n          <PhotoIcon\n            className=\"mx-auto h-12 w-12 text-gray-300\"\n            aria-hidden=\"true\"\n          />\n          <div className=\"mt-4 flex text-sm leading-6 text-gray-600\">\n            <label\n              htmlFor=\"file-upload\"\n              className=\"relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500\"\n            >\n              <span>Upload a file</span>\n              <input\n                id=\"file-upload\"\n                name=\"file-upload\"\n                type=\"file\"\n                className=\"sr-only\"\n              />\n            </label>\n            <p className=\"pl-1\">or drag and drop</p>\n          </div>\n          <p className=\"text-xs leading-5 text-gray-600\">\n            PNG, JPG, GIF up to 10MB\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SaveButton = ({\n  label,\n  isLoading,\n}: {\n  isLoading?: boolean;\n  label: string;\n}) => {\n  return (\n    <button\n      type=\"submit\"\n      className=\"rounded-md bg-indigo-600 items-center flex flex-row gap-2 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n    >\n      {isLoading ? (\n        <div\n          className=\"inline-block h-4 w-4 animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\"\n          role=\"status\"\n        >\n          <span className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\">\n            Loading...\n          </span>\n        </div>\n      ) : null}\n\n      {label}\n    </button>\n  );\n};\n\nexport interface ISelectOption {\n  id: number | string;\n  name: string;\n}\n\nconst Select = ({\n  name,\n  defaultOptions,\n  onSelect,\n}: {\n  name: string;\n  defaultOptions: ISelectOption[];\n  onSelect: (item: ISelectOption) => void;\n}) => {\n  const fetcher = useFetcher();\n  const [selected, setSelected] = React.useState<ISelectOption | null>(null);\n\n  const handleSelect = (item: { id: number | string; name: string }) => {\n    console.log(`Selected ${item.name}`);\n    setSelected(item);\n  };\n\n  const fetchPeople = (query: string) => {\n    fetcher.submit({ query, name }, { method: \"get\", action: \"/api/options\" });\n  };\n\n  const timeoutRef = React.useRef<number | null>(null);\n  const handleQueryChange = (query: string) => {\n    if (timeoutRef.current !== null) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = window.setTimeout(() => {\n      fetchPeople(query);\n      clearTimeout(timeoutRef.current!);\n    }, 300);\n  };\n\n  return (\n    <div className=\"mt-1 relative\">\n      <>\n        <input name={name} type=\"hidden\" value={selected?.id || \"\"} />\n      </>\n\n      <ComboBox\n        items={\n          fetcher.data?.items ? fetcher.data?.items || [] : defaultOptions || []\n        }\n        onSelect={handleSelect}\n        onQueryChange={handleQueryChange}\n      />\n    </div>\n  );\n};\n\nForm.ImageInput = ImageInput;\nForm.DefaultInput = DefaultInput;\nForm.SaveButton = SaveButton;\nForm.Select = Select;\n", "import { Transition } from \"@headlessui/react\";\nimport { XMarkIcon } from \"@heroicons/react/20/solid\";\nimport { CheckCircleIcon } from \"@heroicons/react/24/outline\";\nimport { Fragment, useState } from \"react\";\n\nexport function Notification({\n  message,\n  isError,\n  subMessage,\n  onClose,\n  isOpen,\n}: {\n  isError?: boolean;\n  message: string;\n  subMessage?: string;\n  onClose?: () => void;\n  isOpen?: boolean;\n}) {\n  const [show, setShow] = useState(isOpen ?? false);\n\n  const handleClose = () => {\n    onClose?.();\n    setShow(false);\n  };\n\n  return (\n    <>\n      <div\n        aria-live=\"assertive\"\n        className=\"pointer-events-none fixed inset-0 flex items-end px-4 py-6 sm:items-start sm:p-6\"\n      >\n        <div className=\"flex w-full flex-col items-center space-y-4 sm:items-start\">\n          <Transition\n            show={show}\n            as={Fragment}\n            enter=\"transform ease-out duration-300 transition\"\n            enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n            enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\n            leave=\"transition ease-in duration-100\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg bg-white shadow-lg ring-1 ring-black ring-opacity-5\">\n              <div className=\"p-4\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    {!isError ? (\n                      <CheckCircleIcon\n                        className=\"h-6 w-6 text-green-400\"\n                        aria-hidden=\"true\"\n                      />\n                    ) : (\n                      <XMarkIcon\n                        className=\"h-6 w-6 text-red-400\"\n                        aria-hidden=\"true\"\n                      />\n                    )}\n                  </div>\n                  <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {message}\n                    </p>\n                    <p className=\"mt-1 text-sm text-gray-500\">{subMessage}</p>\n                  </div>\n                  <div className=\"ml-4 flex flex-shrink-0\">\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                      onClick={handleClose}\n                    >\n                      <span className=\"sr-only\">Close</span>\n                      <XMarkIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { Fragment, useState } from \"react\";\nimport { Dialog, Menu, Transition } from \"@headlessui/react\";\nimport {\n  Bars3Icon,\n  BellIcon,\n  CalendarIcon,\n  ChartPieIcon,\n  Cog6ToothIcon,\n  DocumentDuplicateIcon,\n  FolderIcon,\n  HomeIcon,\n  UsersIcon,\n  XMarkIcon,\n} from \"@heroicons/react/24/outline\";\nimport {\n  ChevronDownIcon,\n  MagnifyingGlassIcon,\n} from \"@heroicons/react/20/solid\";\n\nconst navigation = [\n  { name: \"Dashboard\", href: \"#\", icon: HomeIcon, current: true },\n  { name: \"Team\", href: \"#\", icon: UsersIcon, current: false },\n  { name: \"Projects\", href: \"#\", icon: FolderIcon, current: false },\n  { name: \"Calendar\", href: \"#\", icon: CalendarIcon, current: false },\n  { name: \"Documents\", href: \"#\", icon: DocumentDuplicateIcon, current: false },\n  { name: \"Reports\", href: \"#\", icon: ChartPieIcon, current: false },\n];\nconst teams = [\n  { id: 1, name: \"Heroicons\", href: \"#\", initial: \"H\", current: false },\n  { id: 2, name: \"Tailwind Labs\", href: \"#\", initial: \"T\", current: false },\n  { id: 3, name: \"Workcation\", href: \"#\", initial: \"W\", current: false },\n];\nconst userNavigation = [\n  { name: \"Your profile\", href: \"#\" },\n  { name: \"Sign out\", href: \"#\" },\n];\n\nfunction classNames(...classes: any[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport function Layout({ children }: { children: React.ReactNode }) {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-white\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div>\n        <Transition.Root show={sidebarOpen} as={Fragment}>\n          <Dialog\n            as=\"div\"\n            className=\"relative z-50 lg:hidden\"\n            onClose={setSidebarOpen}\n          >\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <div className=\"fixed inset-0 bg-gray-900/80\" />\n            </Transition.Child>\n\n            <div className=\"fixed inset-0 flex\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"transition ease-in-out duration-300 transform\"\n                enterFrom=\"-translate-x-full\"\n                enterTo=\"translate-x-0\"\n                leave=\"transition ease-in-out duration-300 transform\"\n                leaveFrom=\"translate-x-0\"\n                leaveTo=\"-translate-x-full\"\n              >\n                <Dialog.Panel className=\"relative mr-16 flex w-full max-w-xs flex-1\">\n                  <Transition.Child\n                    as={Fragment}\n                    enter=\"ease-in-out duration-300\"\n                    enterFrom=\"opacity-0\"\n                    enterTo=\"opacity-100\"\n                    leave=\"ease-in-out duration-300\"\n                    leaveFrom=\"opacity-100\"\n                    leaveTo=\"opacity-0\"\n                  >\n                    <div className=\"absolute left-full top-0 flex w-16 justify-center pt-5\">\n                      <button\n                        type=\"button\"\n                        className=\"-m-2.5 p-2.5\"\n                        onClick={() => setSidebarOpen(false)}\n                      >\n                        <span className=\"sr-only\">Close sidebar</span>\n                        <XMarkIcon\n                          className=\"h-6 w-6 text-white\"\n                          aria-hidden=\"true\"\n                        />\n                      </button>\n                    </div>\n                  </Transition.Child>\n                  {/* Sidebar component, swap this element with another sidebar if you like */}\n                  <div className=\"flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4 ring-1 ring-white/10\">\n                    <div className=\"flex h-16 shrink-0 items-center\">\n                      <img\n                        className=\"h-8 w-auto\"\n                        src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500\"\n                        alt=\"Your Company\"\n                      />\n                    </div>\n                    <nav className=\"flex flex-1 flex-col\">\n                      <ul role=\"list\" className=\"flex flex-1 flex-col gap-y-7\">\n                        <li>\n                          <ul role=\"list\" className=\"-mx-2 space-y-1\">\n                            {navigation.map((item) => (\n                              <li key={item.name}>\n                                <a\n                                  href={item.href}\n                                  className={classNames(\n                                    item.current\n                                      ? \"bg-gray-800 text-white\"\n                                      : \"text-gray-400 hover:text-white hover:bg-gray-800\",\n                                    \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                                  )}\n                                >\n                                  <item.icon\n                                    className=\"h-6 w-6 shrink-0\"\n                                    aria-hidden=\"true\"\n                                  />\n                                  {item.name}\n                                </a>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li>\n                          <div className=\"text-xs font-semibold leading-6 text-gray-400\">\n                            Your teams\n                          </div>\n                          <ul role=\"list\" className=\"-mx-2 mt-2 space-y-1\">\n                            {teams.map((team) => (\n                              <li key={team.name}>\n                                <a\n                                  href={team.href}\n                                  className={classNames(\n                                    team.current\n                                      ? \"bg-gray-800 text-white\"\n                                      : \"text-gray-400 hover:text-white hover:bg-gray-800\",\n                                    \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                                  )}\n                                >\n                                  <span className=\"flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white\">\n                                    {team.initial}\n                                  </span>\n                                  <span className=\"truncate\">{team.name}</span>\n                                </a>\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                        <li className=\"mt-auto\">\n                          <a\n                            href=\"#\"\n                            className=\"group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white\"\n                          >\n                            <Cog6ToothIcon\n                              className=\"h-6 w-6 shrink-0\"\n                              aria-hidden=\"true\"\n                            />\n                            Settings\n                          </a>\n                        </li>\n                      </ul>\n                    </nav>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        {/* Static sidebar for desktop */}\n        <div className=\"hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col\">\n          {/* Sidebar component, swap this element with another sidebar if you like */}\n          <div className=\"flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-4\">\n            <div className=\"flex h-16 shrink-0 items-center\">\n              <img\n                className=\"h-8 w-auto\"\n                src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500\"\n                alt=\"Your Company\"\n              />\n            </div>\n            <nav className=\"flex flex-1 flex-col\">\n              <ul role=\"list\" className=\"flex flex-1 flex-col gap-y-7\">\n                <li>\n                  <ul role=\"list\" className=\"-mx-2 space-y-1\">\n                    {navigation.map((item) => (\n                      <li key={item.name}>\n                        <a\n                          href={item.href}\n                          className={classNames(\n                            item.current\n                              ? \"bg-gray-800 text-white\"\n                              : \"text-gray-400 hover:text-white hover:bg-gray-800\",\n                            \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                          )}\n                        >\n                          <item.icon\n                            className=\"h-6 w-6 shrink-0\"\n                            aria-hidden=\"true\"\n                          />\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n                <li>\n                  <div className=\"text-xs font-semibold leading-6 text-gray-400\">\n                    Your teams\n                  </div>\n                  <ul role=\"list\" className=\"-mx-2 mt-2 space-y-1\">\n                    {teams.map((team) => (\n                      <li key={team.name}>\n                        <a\n                          href={team.href}\n                          className={classNames(\n                            team.current\n                              ? \"bg-gray-800 text-white\"\n                              : \"text-gray-400 hover:text-white hover:bg-gray-800\",\n                            \"group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold\"\n                          )}\n                        >\n                          <span className=\"flex h-6 w-6 shrink-0 items-center justify-center rounded-lg border border-gray-700 bg-gray-800 text-[0.625rem] font-medium text-gray-400 group-hover:text-white\">\n                            {team.initial}\n                          </span>\n                          <span className=\"truncate\">{team.name}</span>\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n                <li className=\"mt-auto\">\n                  <a\n                    href=\"#\"\n                    className=\"group -mx-2 flex gap-x-3 rounded-md p-2 text-sm font-semibold leading-6 text-gray-400 hover:bg-gray-800 hover:text-white\"\n                  >\n                    <Cog6ToothIcon\n                      className=\"h-6 w-6 shrink-0\"\n                      aria-hidden=\"true\"\n                    />\n                    Settings\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n\n        <div className=\"lg:pl-72\">\n          <div className=\"sticky top-0 flex h-16 shrink-0 items-center gap-x-4 border-b border-gray-200 bg-white px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8\">\n            <button\n              type=\"button\"\n              className=\"-m-2.5 p-2.5 text-gray-700 lg:hidden\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <span className=\"sr-only\">Open sidebar</span>\n              <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n\n            {/* Separator */}\n            <div\n              className=\"h-6 w-px bg-gray-900/10 lg:hidden\"\n              aria-hidden=\"true\"\n            />\n\n            <div className=\"flex flex-1 gap-x-4 self-stretch lg:gap-x-6\">\n              <form className=\"relative flex flex-1\" action=\"#\" method=\"GET\">\n                <label htmlFor=\"search-field\" className=\"sr-only\">\n                  Search\n                </label>\n                <MagnifyingGlassIcon\n                  className=\"pointer-events-none absolute inset-y-0 left-0 h-full w-5 text-gray-400\"\n                  aria-hidden=\"true\"\n                />\n                <input\n                  id=\"search-field\"\n                  className=\"block h-full w-full border-0 py-0 pl-8 pr-0 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm\"\n                  placeholder=\"Search...\"\n                  type=\"search\"\n                  name=\"search\"\n                />\n              </form>\n              <div className=\"flex items-center gap-x-4 lg:gap-x-6\">\n                <button\n                  type=\"button\"\n                  className=\"-m-2.5 p-2.5 text-gray-400 hover:text-gray-500\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Separator */}\n                <div\n                  className=\"hidden lg:block lg:h-6 lg:w-px lg:bg-gray-900/10\"\n                  aria-hidden=\"true\"\n                />\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"relative\">\n                  <Menu.Button className=\"-m-1.5 flex items-center p-1.5\">\n                    <span className=\"sr-only\">Open user menu</span>\n                    <img\n                      className=\"h-8 w-8 rounded-full bg-gray-50\"\n                      src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                      alt=\"\"\n                    />\n                    <span className=\"hidden lg:flex lg:items-center\">\n                      <span\n                        className=\"ml-4 text-sm font-semibold leading-6 text-gray-900\"\n                        aria-hidden=\"true\"\n                      >\n                        Tom Cook\n                      </span>\n                      <ChevronDownIcon\n                        className=\"ml-2 h-5 w-5 text-gray-400\"\n                        aria-hidden=\"true\"\n                      />\n                    </span>\n                  </Menu.Button>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"absolute right-0 z-10 mt-2.5 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none\">\n                      {userNavigation.map((item) => (\n                        <Menu.Item key={item.name}>\n                          {({ active }) => (\n                            <a\n                              href={item.href}\n                              className={classNames(\n                                active ? \"bg-gray-50\" : \"\",\n                                \"block px-3 py-1 text-sm leading-6 text-gray-900\"\n                              )}\n                            >\n                              {item.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n              </div>\n            </div>\n          </div>\n\n          <main className=\"py-10\">\n            <div className=\"px-4 sm:px-6 lg:px-8\">{children}</div>\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n", "import { Menu, Transition } from \"@headlessui/react\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\nimport { useEffect, useState, useRef, Fragment } from \"react\";\nimport { classNames } from \"~/utils/helper\";\n\ntype ARecord = Record<string, any>;\n\nexport type Column<T extends ARecord> = {\n  accessorKey: keyof T;\n  header: string;\n  isColor?: boolean;\n};\n\nexport function Table<TData extends ARecord>({\n  columns,\n  dataList,\n  title,\n  subtitle,\n  onEdit,\n  onBulkDelete,\n  onAdd,\n  onDelete,\n}: {\n  dataList: TData[];\n  columns: Column<TData>[];\n  title: string;\n  subtitle?: string;\n  onEdit?: (dataItem: TData) => void;\n  onAdd?: () => void;\n  onDelete?: (dataItem: TData) => void;\n  onBulkDelete?: (dataItem: TData[]) => void;\n}) {\n  const checkbox = useRef<any>();\n  const [checked, setChecked] = useState(false);\n  const [indeterminate, setIndeterminate] = useState(false);\n  const [selected, _setSelected] = useState<TData[]>([]);\n\n  useEffect(() => {\n    const isIndeterminate =\n      selected.length > 0 && selected.length < dataList.length;\n    setChecked(selected.length === dataList.length);\n    setIndeterminate(isIndeterminate);\n    checkbox.current.indeterminate = isIndeterminate;\n  }, [dataList.length, selected]);\n\n  function toggleAll() {\n    _setSelected(checked || indeterminate ? [] : dataList);\n    setChecked(!checked && !indeterminate);\n    setIndeterminate(false);\n  }\n\n  function handleClickInputSelect(dataItem: TData, checked: boolean) {\n    if (!onBulkDelete) {\n      // _setSelected([dataItem]);\n      checked ? _setSelected([dataItem]) : _setSelected([]);\n    } else {\n      _setSelected(\n        checked\n          ? [...selected, dataItem]\n          : selected.filter((p) => p !== dataItem)\n      );\n    }\n  }\n\n  return (\n    <div className=\"px-4 sm:px-6 lg:px-8\">\n      <div className=\"sm:flex sm:items-center\">\n        <div className=\"sm:flex-auto\">\n          <h1 className=\"text-base font-semibold leading-6 text-gray-900\">\n            {title}\n          </h1>\n          <p className=\"mt-2 text-sm text-gray-700\">\n            {subtitle ?? \"All users that are currently registered.\"}\n          </p>\n        </div>\n        <div className=\"mt-4 sm:ml-16 sm:mt-0 sm:flex-none flex flex-row gap-1 sm:gap-2\">\n          {selected.length < 2 ? (\n            <div className=\"\">\n              <button\n                onClick={onAdd}\n                type=\"button\"\n                className={`block rounded-md  px-3 py-1.5 text-center text-sm font-semibold leading-6  shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\n                  ${\n                    selected.length === 0\n                      ? \"bg-indigo-600 text-white hover:bg-indigo-500 \"\n                      : \"bg-amber-400 text-black hover:bg-amber-300\"\n                  }`}\n              >\n                {selected.length === 0 ? \"Add\" : \"Edit\"}\n              </button>\n            </div>\n          ) : (\n            <>\n              <div className=\"\">\n                <ActionDropdown\n                  onBulkDelete={() => {\n                    onBulkDelete?.(selected);\n                    _setSelected([]);\n                  }}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n      <div className=\"mt-8 flow-root\">\n        <div className=\"-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8\">\n            <div className=\"relative\">\n              <table className=\"min-w-full table-fixed divide-y divide-gray-300\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" className=\"relative px-7 sm:w-12 sm:px-6\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                        ref={checkbox}\n                        checked={checked}\n                        onChange={toggleAll}\n                        style={{\n                          display: onBulkDelete ? \"block\" : \"none\",\n                        }}\n                        // style={{\n                        //   left: \"1.5rem\",\n                        //   top: \"1.25rem\",\n                        // }}\n                      />\n                    </th>\n\n                    {columns.map((column) => {\n                      return (\n                        <th\n                          key={`column-${column.accessorKey.toString()}`}\n                          scope=\"col\"\n                          className=\"min-w-[12rem] py-3.5 pr-3 text-left text-sm font-semibold text-gray-900\"\n                        >\n                          {column.header}\n                        </th>\n                      );\n                    })}\n\n                    <th scope=\"col\" className=\"relative py-1 pl-3 pr-4 sm:pr-3\">\n                      <span className=\"sr-only\">Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-200 bg-white\">\n                  {dataList.map((dataItem) => (\n                    <tr\n                      key={`row-${dataItem.id}`}\n                      className={\n                        selected.includes(dataItem) ? \"bg-gray-50\" : undefined\n                      }\n                    >\n                      <td className=\"relative px-7 sm:w-12 sm:px-6\">\n                        {selected.includes(dataItem) && (\n                          <div className=\"absolute inset-y-0 left-0 w-0.5 bg-indigo-600\" />\n                        )}\n                        <input\n                          type=\"checkbox\"\n                          className=\"absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600\"\n                          value={dataItem.email}\n                          checked={selected.includes(dataItem)}\n                          onChange={(e) =>\n                            handleClickInputSelect(dataItem, e.target.checked)\n                          }\n                        />\n                      </td>\n\n                      {columns.map((column) => {\n                        const value = dataItem[column.accessorKey];\n                        return (\n                          <>\n                            {/* COLOR */}\n                            {column.isColor ? (\n                              <td\n                                role=\"button\"\n                                className=\"whitespace-nowrap px-3 py-2 text-sm text-gray-500\"\n                              >\n                                <span\n                                  style={{\n                                    backgroundColor: `${value}`,\n                                    color: \"white\",\n                                  }}\n                                  className={`inline-flex  items-center rounded-md  px-2 py-1 text-xs font-medium text-green-700 ring-1 ring-inset ring-green-600/20`}\n                                >\n                                  {value}\n                                </span>\n                              </td>\n                            ) : (\n                              <>\n                                <td\n                                  className={classNames(\n                                    \"whitespace-nowrap py-1 pr-3 text-sm font-medium\",\n                                    selected.includes(dataItem)\n                                      ? \"text-indigo-600\"\n                                      : \"text-gray-900\"\n                                  )}\n                                >\n                                  {dataItem[column.accessorKey]}\n                                </td>\n                              </>\n                            )}\n                          </>\n                        );\n                      })}\n\n                      <td className=\"whitespace-nowrap py-2 pl-3 pr-4 text-right text-sm font-medium sm:pr-3\">\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n\n                            onDelete?.(dataItem);\n                          }}\n                          className=\"text-red-600 z-20 hover:text-indigo-900 bg-red-100 hover:bg-indigo-100 px-2 py-1 rounded-md text-xs font-medium\"\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ActionDropdown({ onBulkDelete }: { onBulkDelete?: () => void }) {\n  return (\n    <Menu as=\"div\" className=\"relative inline-block text-left\">\n      <div>\n        <Menu.Button className=\"inline-flex w-full justify-center gap-x-1.5 rounded-md bg-gray-900 px-3 py-2 text-sm font-semibold text-white shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-700\">\n          Options\n          <ChevronDownIcon\n            className=\"-mr-1 h-5 w-5 text-gray-400\"\n            aria-hidden=\"true\"\n          />\n        </Menu.Button>\n      </div>\n\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"absolute right-0 z-10 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n          <div className=\"py-1\">\n            <Menu.Item>\n              {({ active }) => (\n                <button\n                  onClick={onBulkDelete}\n                  className={classNames(\n                    active ? \"bg-gray-100 text-gray-900\" : \"text-gray-700\",\n                    \"block px-4 py-2 text-sm\"\n                  )}\n                >\n                  Delete All\n                </button>\n              )}\n            </Menu.Item>\n          </div>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  );\n}\n", "export type ModelConfig = {\n  title: string;\n  loader: (args: LoaderFunctionArgs) => Promise<any>;\n  onDelete: (args: ActionFunctionArgs) => Promise<any>;\n  onBulkDelete?: (args: ActionFunctionArgs) => Promise<any>;\n  onAdd: (args: ActionFunctionArgs) => Promise<any>;\n  redirect: string;\n  view: {\n    table: {\n      columns: {\n        accessorKey: string;\n        header: string;\n        isColor?: boolean;\n      }[];\n    };\n    AddForm: {\n      fields:\n        | ({\n            Component: React.ComponentType<any>;\n            name: string;\n            label: string;\n            onGetOptions?: (query: string) => Promise<\n              {\n                name: string;\n                id: string;\n                color?: string;\n              }[]\n            >;\n          } & React.HTMLProps<HTMLInputElement>)[];\n    };\n  };\n};\n\nexport type ConfigType = {\n  models: {\n    [key: string]: ModelConfig;\n  };\n};\n\nexport const getFormDataValue = (\n  formData: FormData | undefined,\n  key: string\n) => {\n  if (!formData) throw new Error(\"Form data is required\");\n\n  const val = formData.get(key);\n\n  return val?.toString();\n};\n\ntype DataFunctionArgs = {\n  request: Request;\n  params: Record<string, string>;\n};\nexport type ActionFunctionArgs = DataFunctionArgs & {\n  formData: FormData | undefined;\n  config: ModelConfig;\n};\n\nexport type LoaderFunctionArgs = DataFunctionArgs;\n\nexport interface PageHandler {\n  makeRequest: (props: ActionFunctionArgs) => Promise<any>;\n}\n\nexport interface LibLoaderData {\n  data: any[];\n}\n\nexport interface LibActionData {\n  status: number;\n  message: string;\n  field?: string;\n  fieldMessage?: string;\n}\nexport const createPageFunction = ({ config }: { config: ConfigType }) => {\n  const loader = async (props: DataFunctionArgs): Promise<LibLoaderData> => {\n    const modelConfig: ModelConfig =\n      config[\"models\"][props.params.model as keyof typeof config[\"models\"]];\n\n    return {\n      data: await modelConfig.loader(props),\n    };\n  };\n\n  const action = async (props: DataFunctionArgs) => {\n    const formData = await props.request.formData();\n\n    const modelConfig: ModelConfig =\n      config[\"models\"][props.params.model as keyof typeof config[\"models\"]];\n\n    //   get search Params\n    const url = new URL(props.request.url);\n    const searchParams = url.searchParams;\n    const action = searchParams.get(\"action\");\n    const formAction = getFormDataValue(formData, \"action\");\n\n    let actionToRun = modelConfig.onAdd;\n    if (action === \"edit\") {\n      actionToRun = modelConfig.onAdd;\n    } else if (formAction === \"delete\") {\n      actionToRun = modelConfig.onDelete;\n    } else if (formAction === \"bulkDelete\" && modelConfig.onBulkDelete) {\n      actionToRun = modelConfig.onBulkDelete;\n    } else if (formAction === \"bulkDelete\" && !modelConfig.onBulkDelete) {\n      throw new Error(\"Bulk delete is not supported\");\n    }\n\n    try {\n      return (\n        (await actionToRun({\n          ...props,\n          formData,\n          config: modelConfig,\n        })) || {}\n      );\n    } catch (error) {\n      console.log({ error });\n\n      const message =\n        error && typeof error === \"object\" && \"message\" in error\n          ? (error.message as string)\n          : \"Something went wrong\";\n\n      const errorReturn: LibActionData = {\n        status: 500,\n        message,\n        ...(error as {}),\n      };\n      return errorReturn;\n    }\n  };\n\n  return {\n    loader,\n    action,\n  };\n};\n", "import {\n  useParams,\n  useLoaderData,\n  useFetcher,\n  useNavigate,\n  useMatches,\n  useSearchParams,\n  useActionData,\n  useNavigation,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { useContext } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { LibContext } from \"./react\";\nimport { LibActionData, LibLoaderData } from \"./core\";\nimport React from \"react\";\n\nexport const useModel = () => {\n  const { config } = useContext(LibContext);\n\n  if (!config.models) {\n    throw new Error(\"Please Provide the config in the LibProvider\");\n  }\n\n  const { model } = useParams<{\n    model: string;\n  }>();\n\n  invariant(model, \"Model is required\");\n\n  const modelConfig = config.models[model as keyof typeof config[\"models\"]];\n\n  const getColumns = (): any[] => {\n    return modelConfig.view?.table?.columns || [];\n  };\n\n  const pageTitle = modelConfig.title;\n  const supportsBulkDelete = modelConfig.onBulkDelete !== undefined;\n\n  return {\n    getColumns,\n    pageTitle,\n    addForm: modelConfig.view.AddForm,\n    supportsBulkDelete,\n    ...config,\n  };\n};\n\nexport const useAdminPage = () => {\n  const model = useModel();\n  const navigate = useNavigate();\n\n  const { data } = useLoaderData<LibLoaderData>();\n  const actionData = useActionData<LibActionData>();\n  const submit = useSubmit();\n  const navigationState = useNavigation();\n  const { id } = useParams();\n  const singleItem = data?.find?.((item: any) => item.id === id);\n\n  const dataItemDeleted = navigationState.formData?.get(\"id\");\n  const dataItemsDeleted = navigationState.formData\n    ? JSON.parse(navigationState.formData?.get(\"ids\")?.toString() || \"[]\")\n    : undefined;\n\n  const handleClickEdit = (dataItem: any) => {\n    navigate(`${dataItem?.id}`);\n  };\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const handelClickAdd = () => {\n    searchParams.set(\"action\", \"create\");\n    setSearchParams(searchParams);\n  };\n\n  const handelClickDelete = (dataItem: any) => {\n    submit(\n      {\n        id: dataItem.id,\n        action: \"delete\",\n      },\n      {\n        method: \"POST\",\n      }\n    );\n  };\n\n  const handleClickBulkDelete = (dataItems: any[]) => {\n    submit(\n      {\n        ids: JSON.stringify(dataItems.map((item) => item.id)),\n        action: \"bulkDelete\",\n      },\n      {\n        method: \"POST\",\n      }\n    );\n  };\n\n  const dataListToRender =\n    data?.filter((data: any) => {\n      return (\n        data.id !== dataItemDeleted && !dataItemsDeleted?.includes(data.id)\n      );\n    }) || [];\n\n  const getOverlayProps = () => {\n    return {\n      isOpen: searchParams.get(\"action\") === \"create\",\n      onCancel: () => {\n        searchParams.delete(\"action\");\n        setSearchParams(searchParams);\n      },\n    };\n  };\n\n  const getFormProps = () => {\n    return {\n      title: \"Title Form\",\n      onCancel: () => {\n        searchParams.delete(\"action\");\n        setSearchParams(searchParams);\n      },\n      error: {\n        message: actionData?.fieldMessage,\n        field: actionData?.field,\n      },\n    };\n  };\n\n  const getFormFieldProps = (field: React.HTMLProps<HTMLInputElement>) => {\n    const isCreating = searchParams.get(\"action\") === \"create\";\n    const isSubmitting = actionState === \"loading\";\n\n    return {\n      ...field,\n      key: field.name,\n      value: isCreating && isSubmitting ? \"\" : field.value,\n      error:\n        actionData?.field === field.name\n          ? actionData?.fieldMessage || \"\"\n          : undefined,\n    };\n  };\n\n  const actionState = navigationState.state;\n\n  const [closedNotification, setClosedNotification] = React.useState(false);\n\n  React.useEffect(() => {\n    if (actionState === \"submitting\") {\n      setClosedNotification(false);\n    }\n  }, [actionState]);\n\n  const getNotificationProps = React.useCallback(() => {\n    const isOpen = closedNotification ? false : !!actionData?.message;\n    return {\n      isOpen,\n      key: isOpen ? \"open\" : \"close\",\n      message: \"Something went wrong\",\n      subMessage: actionData?.message,\n      isError: true,\n      onClose: () => {\n        setClosedNotification(true);\n      },\n    };\n  }, [actionData?.message, closedNotification]);\n\n  // const view: View\n  return {\n    columns: model.getColumns(),\n    optimisicData: dataListToRender,\n    data,\n    handelClickAdd,\n    handleClickEdit,\n    handelClickDelete,\n    handleClickBulkDelete: model.supportsBulkDelete\n      ? handleClickBulkDelete\n      : undefined,\n    currentData: singleItem,\n    getOverlayProps,\n    getFormProps,\n    getFormFieldProps,\n    getNotificationProps,\n\n    ...model,\n  };\n};\n", "import { useNavigate, useNavigation } from \"@remix-run/react\";\nimport React from \"react\";\nimport { Form } from \"./components/form\";\nimport type { ConfigType } from \"./core\";\nimport { SlideOver } from \"./components/slide-over\";\n\nexport const LibContext = React.createContext<{\n  config: ConfigType;\n}>({\n  config: {} as ConfigType,\n});\n\nexport const LibProvider = ({\n  children,\n  config,\n}: {\n  children: React.ReactNode;\n  config: ConfigType;\n}) => {\n  return (\n    <LibContext.Provider value={{ config }}>{children}</LibContext.Provider>\n  );\n};\n\nexport const LibForm = ({\n  title,\n  children,\n  onCancel,\n}: {\n  title: string;\n  children: React.ReactNode;\n  onCancel?: () => void;\n}) => {\n  const { state } = useNavigation();\n\n  const stateRef = React.useRef(state);\n  React.useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n\n  return (\n    <Form\n      onCancel={onCancel}\n      // isDone={stateRef.current === \"loading\" && state === \"submitting\"}\n      title={title}\n      method=\"POST\"\n      SaveButton={\n        <Form.SaveButton\n          label={state === \"submitting\" ? \"Saving...\" : \"Save\"}\n          isLoading={state === \"submitting\"}\n        />\n      }\n    >\n      {children}\n    </Form>\n  );\n};\n\nexport const LibSliderOver = ({\n  children,\n  isOpen,\n  onCancel,\n}: {\n  children: React.ReactNode;\n  isOpen: boolean;\n  onCancel: () => void;\n}) => {\n  return (\n    <SlideOver isOpen={isOpen} onClose={onCancel}>\n      {children}\n    </SlideOver>\n  );\n};\n", "import { FormProps } from \"@remix-run/react\";\nimport { PhotoIcon, UserCircleIcon } from \"@heroicons/react/24/solid\";\nimport { Form as RemixForm } from \"@remix-run/react\";\n\nexport function Form({\n  title,\n  children,\n  description,\n  SaveButton,\n  onCancel,\n  ...props\n}: {\n  title: string;\n  description?: string;\n  children: React.ReactNode;\n  SaveButton?: React.ReactNode;\n  onCancel?: () => void;\n} & FormProps) {\n  return (\n    <div className=\"space-y-10 divide-y divide-gray-900/10\">\n      <div className=\"flex flex-col gap-x-8 gap-y-8\">\n        <div className=\"px-4 sm:px-0\">\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\n            {title}\n          </h2>\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n            {description || \"Update Model Information\"}\n          </p>\n        </div>\n\n        <RemixForm\n          {...props}\n          method=\"POST\"\n          className=\"bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl md:col-span-2\"\n        >\n          <div className=\"px-4 py-6 sm:p-8\">\n            <div className=\"max-w-2xl gap-x-6 gap-y-8 flex flex-col\">\n              {children}\n            </div>\n          </div>\n\n          <div className=\"flex items-center justify-end gap-x-6 border-t border-gray-900/10 px-4 py-4 sm:px-8\">\n            {SaveButton}\n\n            <button\n              onClick={onCancel}\n              type=\"button\"\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\n            >\n              Cancel\n            </button>\n          </div>\n        </RemixForm>\n      </div>\n    </div>\n  );\n}\n\nconst DefaultInput = ({\n  label,\n  ...props\n}: {\n  label?: string;\n  name: string;\n} & React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>) => {\n  return (\n    <div className={`${props.hidden ? \"hidden\" : \"\"}`}>\n      {label ? (\n        <label\n          htmlFor=\"first-name\"\n          className=\"block text-sm font-medium leading-6 text-gray-900\"\n        >\n          {label}\n        </label>\n      ) : null}\n      <div className=\"mt-2\">\n        <input\n          {...props}\n          className={`block w-full pl-4 rounded-md border-[1px] py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 ${\n            props.hidden ? \"hidden\" : \"\"\n          }`}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst ImageInput = () => {\n  return (\n    <div className=\"col-span-full\">\n      <label\n        htmlFor=\"cover-photo\"\n        className=\"block text-sm font-medium leading-6 text-gray-900\"\n      >\n        Cover photo\n      </label>\n      <div className=\"mt-2 flex justify-center rounded-lg border border-dashed border-gray-900/25 px-6 py-10\">\n        <div className=\"text-center\">\n          <PhotoIcon\n            className=\"mx-auto h-12 w-12 text-gray-300\"\n            aria-hidden=\"true\"\n          />\n          <div className=\"mt-4 flex text-sm leading-6 text-gray-600\">\n            <label\n              htmlFor=\"file-upload\"\n              className=\"relative cursor-pointer rounded-md bg-white font-semibold text-indigo-600 focus-within:outline-none focus-within:ring-2 focus-within:ring-indigo-600 focus-within:ring-offset-2 hover:text-indigo-500\"\n            >\n              <span>Upload a file</span>\n              <input\n                id=\"file-upload\"\n                name=\"file-upload\"\n                type=\"file\"\n                className=\"sr-only\"\n              />\n            </label>\n            <p className=\"pl-1\">or drag and drop</p>\n          </div>\n          <p className=\"text-xs leading-5 text-gray-600\">\n            PNG, JPG, GIF up to 10MB\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SaveButton = ({\n  label,\n  isLoading,\n}: {\n  isLoading?: boolean;\n  label: string;\n}) => {\n  return (\n    <button\n      type=\"submit\"\n      className=\"rounded-md bg-indigo-600 items-center flex flex-row gap-2 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n    >\n      {isLoading ? (\n        <div\n          className=\"inline-block h-4 w-4 animate-spin rounded-full border-2 border-solid border-current border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\"\n          role=\"status\"\n        >\n          <span className=\"!absolute !-m-px !h-px !w-px !overflow-hidden !whitespace-nowrap !border-0 !p-0 ![clip:rect(0,0,0,0)]\">\n            Loading...\n          </span>\n        </div>\n      ) : null}\n\n      {label}\n    </button>\n  );\n};\n\nForm.ImageInput = ImageInput;\nForm.DefaultInput = DefaultInput;\nForm.SaveButton = SaveButton;\n", "import { Dialog, Transition } from \"@headlessui/react\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\nimport React from \"react\";\nimport { Fragment, useState } from \"react\";\n\nexport function SlideOver({\n  children,\n  isOpen,\n  onClose,\n}: {\n  children: React.ReactNode;\n  isOpen: boolean;\n  onClose: () => void;\n}) {\n  const [open, setOpen] = useState(isOpen);\n\n  React.useEffect(() => {\n    setOpen(isOpen);\n  }, [isOpen]);\n\n  const handleClose = () => {\n    setOpen(false);\n    onClose();\n  };\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\n        <div className=\"fixed inset-0\" />\n\n        <div className=\"fixed inset-0 overflow-hidden\">\n          <div className=\"absolute inset-0 overflow-hidden\">\n            <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"transform transition ease-in-out duration-500 sm:duration-700\"\n                enterFrom=\"translate-x-full\"\n                enterTo=\"translate-x-0\"\n                leave=\"transform transition ease-in-out duration-500 sm:duration-700\"\n                leaveFrom=\"translate-x-0\"\n                leaveTo=\"translate-x-full\"\n              >\n                <Dialog.Panel className=\"pointer-events-auto w-screen max-w-md\">\n                  <div className=\"flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl\">\n                    <div className=\"px-4 sm:px-6\">\n                      <div className=\"flex items-start justify-between\">\n                        {/* <Dialog.Title className=\"text-base font-semibold leading-6 text-gray-900\">\n                          Panel title\n                        </Dialog.Title> */}\n                        <div className=\"ml-3 flex h-7 items-center\">\n                          <button\n                            type=\"button\"\n                            className=\"rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\n                            onClick={handleClose}\n                          >\n                            <span className=\"sr-only\">Close panel</span>\n                            <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"relative mt-6 flex-1 px-4 sm:px-6\">\n                      {children}\n                    </div>\n                  </div>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n}\n", "import { Outlet } from \"@remix-run/react\";\n\nimport {\n  ActionFunctionArgs,\n  ConfigType,\n  LoaderFunctionArgs,\n  getFormDataValue,\n} from \"~/utils/lib/core\";\n// import { getXataClient } from \"~/utils/xata\";\n// import { getXataClient } from \"utils/xata\";\nimport { Form } from \"~/components/form\";\nimport { getXataClient } from \"utils/xata\";\n\nexport const CONFIG: ConfigType = {\n  models: {\n    Location: {\n      title: \"Locations\",\n      loader: async ({ request }: LoaderFunctionArgs) => {\n        const client = getXataClient();\n        return await client.db.Location.getAll();\n      },\n      onAdd: async ({ formData }: ActionFunctionArgs) => {\n        const client = await getXataClient();\n\n        try {\n          return await client.db.Location.create({\n            name: getFormDataValue(formData, \"name\"),\n            description: getFormDataValue(formData, \"description\"),\n          });\n        } catch (e: any) {\n          console.log(e);\n\n          throw {\n            message: e.message,\n            status: e.status,\n            field: \"name\",\n            fieldMessage: \"Name already exists\",\n          };\n        }\n      },\n\n      onDelete: async ({ formData, params }: ActionFunctionArgs) => {\n        const client = await getXataClient();\n\n        await client.db.Location.deleteOrThrow({\n          id: getFormDataValue(formData, \"id\") || \"\",\n        });\n      },\n\n      onBulkDelete: async ({ formData }: ActionFunctionArgs) => {\n        const client = await getXataClient();\n\n        const idsToDelete = JSON.parse(\n          getFormDataValue(formData, \"ids\") || \"[]\"\n        ) as string[];\n\n        const promises = idsToDelete.map((id) =>\n          client.db.Location.delete({ id })\n        );\n        await Promise.all(promises);\n      },\n\n      redirect: \"/admin/Location\",\n      view: {\n        table: {\n          columns: [\n            {\n              accessorKey: \"name\",\n              header: \"name\",\n            },\n          ],\n        },\n        AddForm: {\n          fields: [\n            {\n              Component: Form.DefaultInput,\n              name: \"name\",\n              label: \"name\",\n              minLength: 3,\n            },\n          ],\n        },\n      },\n    },\n\n    Tag: {\n      title: \"Tags\",\n      loader: async (props: LoaderFunctionArgs) => {\n        const client = await getXataClient();\n        const tag = await client.db.Tag.select([\n          \"label\",\n          \"id\",\n          \"color.name\",\n        ]).getAll();\n\n        return tag.map((t) => ({\n          ...t,\n          color: t.color?.name || \"\",\n        }));\n      },\n\n      onDelete: async ({ formData }: ActionFunctionArgs) => {\n        const client = await getXataClient();\n        return await client.db.Tag.delete({\n          id: getFormDataValue(formData, \"id\") || \"\",\n        });\n      },\n\n      onAdd: async ({ formData }: ActionFunctionArgs) => {\n        const client = await getXataClient();\n\n        return await client.db.Tag.create({\n          label: getFormDataValue(formData, \"label\"),\n          color: getFormDataValue(formData, \"color\"),\n        });\n      },\n\n      redirect: \"/admin/Tag\",\n      view: {\n        table: {\n          columns: [\n            {\n              accessorKey: \"label\",\n              header: \"Label\",\n            },\n            {\n              accessorKey: \"color\",\n              header: \"Color\",\n              isColor: true,\n            },\n          ],\n        },\n        AddForm: {\n          fields: [\n            {\n              Component: Form.DefaultInput,\n              name: \"label\",\n              label: \"Label\",\n              minLength: 4,\n            },\n            {\n              name: \"color\",\n              label: \"Color\",\n              Component: Form.Select,\n              onGetOptions: async (query) => {\n                const client = await getXataClient();\n                const records = await client.search.byTable(query, {\n                  tables: [\n                    {\n                      table: \"Color\",\n                      target: [{ column: \"name\" }],\n                    },\n                  ],\n                  fuzziness: 1,\n                  prefix: \"phrase\",\n                });\n\n                return (\n                  records.Color?.filter((r) => r.id && r.name)?.map((r) => {\n                    return {\n                      name: r.name || \"\",\n                      color: r.name || \"\",\n                      id: r.id || \"\",\n                    };\n                  }) || []\n                );\n              },\n            },\n          ],\n        },\n      },\n    },\n  },\n};\n\nexport default function Index() {\n  return <Outlet />;\n}\n\n// export default function Index() {\n//   return <>123</>;\n// }\n", "import { DataFunctionArgs, json } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\nimport { CONFIG } from \"./admin\";\nimport { isLoggedIn } from \"~/utils/helper\";\n\nexport const loader = async ({ request }: DataFunctionArgs) => {\n  await isLoggedIn(request);\n\n  const url = new URL(request.url);\n  const query = url.searchParams.get(\"query\");\n  const name = url.searchParams.get(\"name\");\n\n  invariant(typeof query === \"string\", \"query is required\");\n\n  const field = CONFIG.models[\"Tag\"].view.AddForm.fields.find(\n    (field) => field.name === name?.toString()\n  );\n\n  const options = await field?.onGetOptions?.(query);\n\n  return json({\n    items: options || [],\n  });\n};\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { format } from \"date-fns\";\nimport React from \"react\";\nimport styles from \"react-day-picker/dist/style.module.css\";\nimport { GeneralErrorBoundary } from \"~/components/error-boundary\";\nimport { vacationLoader, vacationAction } from \"~/features/vacation\";\nimport { ActivityBookingBottomSheet } from \"~/features/vacation/container/activity-booking-bottom-sheet\";\nimport { ActivityList } from \"~/features/vacation/container/activity-list\";\nimport { VacationDatePicker } from \"~/features/vacation/container/vacation-date-picker\";\nimport { VacationMap } from \"~/features/vacation/mapper/vacationMapper\";\nimport {\n  initVacation,\n  useVacationStore } from\n\"~/features/vacation/store/vacation-store\";\n\n// export function links() {\n//   return [{ rel: \"stylesheet\", href: styles }];\n// }\n\nexport const loader = vacationLoader;\n\nexport const action = vacationAction;\n\nexport default function NotesRoute() {\n  const data = useLoaderData<typeof loader>();\n  const vacation = useVacationStore((state) => state.vacation);\n\n  React.useEffect(() => {\n    initVacation(VacationMap.toDomain(data.vacation));\n  }, [data.vacation]);\n\n  if (!vacation.props) return null;\n  return <NotesContent />;\n}\n\nconst NotesContent = () => {\n  const vacation = useVacationStore((state) => state.vacation);\n  const selectedDay = useVacationStore((state) => state.selectedDay);\n  const activitiesSelectedDay = vacation.getActivityAtDate(selectedDay);\n  const activitiesUnallocated = vacation.getUnallocatedActivities();\n\n  return (\n    <>\n      <div className=\"flex h-full flex-col\">\n        {/* ActivityBottomshe */}\n        <ActivityBookingBottomSheet />\n\n        <div className=\"mx-4 mt-2 flex flex-row items-center justify-center rounded-2xl bg-gray-700 pb-4 text-white\">\n          <VacationDatePicker />\n        </div>\n\n        {activitiesUnallocated.length ?\n        <ActivityList\n          title={\"Open Activities\"}\n          activities={activitiesUnallocated} /> :\n\n        null}\n\n        <ActivityList\n          title={format(selectedDay, \"dd.MM.yyyy\")}\n          activities={activitiesSelectedDay} />\n\n      </div>\n    </>);\n\n};\n\nexport function ErrorBoundary() {\n  return (\n    <GeneralErrorBoundary\n      statusHandlers={{\n        404: ({ params }) =>\n        <p>No user with the username \"{params.username}\" exists</p>\n\n      }} />);\n\n\n}", "import {\n  isRouteErrorResponse,\n  useParams,\n  useRouteError,\n} from \"@remix-run/react\";\nimport { type ErrorResponse } from \"@remix-run/router\";\nimport { getErrorMessage } from \"~/utils/misc\";\n// import { getErrorMessage } from '~/utils/misc.ts'\n\ntype StatusHandler = (info: {\n  error: ErrorResponse;\n  params: Record<string, string | undefined>;\n}) => JSX.Element | null;\n\nexport function GeneralErrorBoundary({\n  defaultStatusHandler = ({ error }) => (\n    <p>\n      {error.status} {error.data}\n    </p>\n  ),\n  statusHandlers,\n  unexpectedErrorHandler = (error) => <p>{getErrorMessage(error)}</p>,\n}: {\n  defaultStatusHandler?: StatusHandler;\n  statusHandlers?: Record<number, StatusHandler>;\n  unexpectedErrorHandler?: (error: unknown) => JSX.Element | null;\n}) {\n  const error = useRouteError();\n  const params = useParams();\n\n  if (typeof document !== \"undefined\") {\n    console.error(error);\n  }\n\n  return (\n    <div className=\"bg-red-200 text-h2 container mx-auto flex items-center justify-center p-20\">\n      {isRouteErrorResponse(error)\n        ? (statusHandlers?.[error.status] ?? defaultStatusHandler)({\n            error,\n            params,\n          })\n        : unexpectedErrorHandler(error)}\n    </div>\n  );\n}\n", "import React from \"react\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\nexport function getUserImgSrc(imageId?: string | null) {\n  return imageId ? `/resources/file/${imageId}` : `/img/user.png`;\n}\n\nexport function getErrorMessage(error: unknown) {\n  if (typeof error === \"string\") return error;\n  if (\n    error &&\n    typeof error === \"object\" &&\n    \"message\" in error &&\n    typeof error.message === \"string\"\n  ) {\n    return error.message;\n  }\n  console.error(\"Unable to get error message for error\", error);\n  return \"Unknown Error\";\n}\n\nfunction debounce<Callback extends (...args: Parameters<Callback>) => void>(\n  fn: Callback,\n  delay: number\n) {\n  let timer: ReturnType<typeof setTimeout> | null = null;\n  return (...args: Parameters<Callback>) => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n}\n\nexport function useDebounce<\n  Callback extends (...args: Parameters<Callback>) => ReturnType<Callback>\n>(callback: Callback, delay: number) {\n  const callbackRef = React.useRef(callback);\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n  return React.useMemo(\n    () =>\n      debounce(\n        (...args: Parameters<Callback>) => callbackRef.current(...args),\n        delay\n      ),\n    [delay]\n  );\n}\n\nfunction callAll<Args extends Array<unknown>>(\n  ...fns: Array<((...args: Args) => unknown) | undefined>\n) {\n  return (...args: Args) => fns.forEach((fn) => fn?.(...args));\n}\n\nexport function useDoubleCheck() {\n  const [doubleCheck, setDoubleCheck] = React.useState(false);\n\n  function getButtonProps(props?: JSX.IntrinsicElements[\"button\"]) {\n    const onBlur: JSX.IntrinsicElements[\"button\"][\"onBlur\"] = () =>\n      setDoubleCheck(false);\n\n    const onClick: JSX.IntrinsicElements[\"button\"][\"onClick\"] = doubleCheck\n      ? undefined\n      : (e) => {\n          e.preventDefault();\n          setDoubleCheck(true);\n        };\n\n    return {\n      ...props,\n      onBlur: callAll(onBlur, props?.onBlur),\n      onClick: callAll(onClick, props?.onClick),\n    };\n  }\n\n  return { doubleCheck, getButtonProps };\n}\n", "import { Dialog } from \"@headlessui/react\";\nimport { BottomSheetModal } from \"~/components/bottom-sheet-modal\";\nimport { CheckIcon, RocketIcon } from \"~/components/icons\";\nimport { getCurrentDateString } from \"~/utils/helper\";\nimport type { ActivityEntity } from \"../domain/activity\";\nimport { closeAcitivtyModal, useVacationStore } from \"../store/vacation-store\";\nimport { useActivityBookingBottomSheet } from \"./hooks/use-activity-booking-bottom-sheet\";\n\nexport const ActivityBookingBottomSheet = () => {\n  const selectedActivity = useVacationStore(\n    (state) => state.vacation.pendingActivity\n  );\n\n  return (\n    <BottomSheetModal onClose={closeAcitivtyModal} isOpen={!!selectedActivity}>\n      {selectedActivity ? (\n        <ActivityContent activity={selectedActivity} />\n      ) : null}\n    </BottomSheetModal>\n  );\n};\n\nconst ActivityContent = ({ activity }: { activity: ActivityEntity }) => {\n  const {\n    activityHasFixedDate,\n    inputDefaultDate,\n    bookTime,\n    inputRef,\n    handleClickBookTime,\n    handleClickConfirm,\n    isSubmitting,\n    activityIsBooked,\n    closeAcitivtyModal,\n  } = useActivityBookingBottomSheet();\n\n  return (\n    <>\n      <div>\n        <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-100\">\n          <RocketIcon />\n        </div>\n        <div className=\"mt-3 text-center sm:mt-5\">\n          <Dialog.Title\n            as=\"h3\"\n            className=\"text-base font-semibold leading-6 text-gray-900\"\n          >\n            Personal Training Session with Hans\n          </Dialog.Title>\n          <div className=\"mt-2\">\n            <p className=\"text-sm text-gray-500\">\n              {activity.props.description.props.value}\n            </p>\n          </div>\n        </div>\n\n        {!activityHasFixedDate ? (\n          <>\n            <div className=\"px-2 pt-4\">Please select a day and time</div>\n\n            {inputDefaultDate || bookTime ? (\n              <div className=\"flex w-full flex-row justify-center pt-2\">\n                <input\n                  ref={inputRef}\n                  type=\"datetime-local\"\n                  className=\"block w-[75vw] rounded-md border border-gray-300 px-2 py-1 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  defaultValue={getCurrentDateString()}\n                />\n              </div>\n            ) : null}\n          </>\n        ) : (\n          <>\n            <div className=\"flex w-full flex-col justify-center gap-2 px-2 pt-4\">\n              <p className=\"text-center\">Event Time</p>\n\n              <div className=\"grid place-items-center\">\n                <input\n                  disabled\n                  type=\"datetime-local\"\n                  className=\"block w-[75vw] rounded-md border border-gray-300 px-2  py-1 text-center focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                  defaultValue={\n                    inputDefaultDate ||\n                    new Date().toLocaleDateString().slice(0, 16)\n                  }\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* CONTROL BUTTONS  */}\n      <div className=\"mt-5 flex flex-col gap-1 sm:mt-6\">\n        {!activityHasFixedDate ? (\n          <button\n            disabled={isSubmitting}\n            type=\"button\"\n            className={`inline-flex w-full justify-center rounded-md ${\n              bookTime ? \"bg-green-300 \" : \"bg-yellow-300\"\n            } px-3 py-2 text-sm font-semibold text-gray-800 shadow-sm  focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 `}\n            onClick={bookTime ? handleClickConfirm : handleClickBookTime}\n          >\n            {isSubmitting ? (\n              <div className=\"flex flex-row items-center gap-2\">\n                <div>\n                  <RocketIcon animate={true} />\n                </div>\n                <div>We are booking your activity...</div>\n              </div>\n            ) : activityIsBooked ? (\n              <CheckIcon animate={true} />\n            ) : (\n              <>{bookTime ? \"Confirm\" : \"Book a time\"} </>\n            )}\n          </button>\n        ) : null}\n\n        <button\n          type=\"button\"\n          disabled={isSubmitting}\n          className=\"inline-flex w-full justify-center rounded-md bg-indigo-300 px-3 py-2 text-sm font-semibold text-black shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          onClick={closeAcitivtyModal}\n        >\n          Go back to dashboard\n        </button>\n      </div>\n    </>\n  );\n};\n", "import { Dialog, Transition } from \"@headlessui/react\";\nimport React, { Fragment } from \"react\";\n\nexport const BottomSheetModal = ({\n  isOpen,\n  onClose,\n  children,\n}: {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}) => {\n  const [open, setOpen] = React.useState(isOpen);\n\n  const handleClose = () => {\n    setOpen(false);\n    onClose();\n  };\n\n  React.useEffect(() => {\n    setOpen(isOpen);\n  }, [isOpen]);\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"relative z-10\"\n        onClose={() => {\n          handleClose();\n        }}\n      >\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-200\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n        </Transition.Child>\n\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n          <div className=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-500\"\n              enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n              enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n              leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            >\n              <Dialog.Panel className=\"relative w-full transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-sm sm:p-6\">\n                {children}\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n};\n", "import { motion } from \"framer-motion\";\n\nexport const SettingsIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      className=\"h-6 w-6\"\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z\"\n      />\n    </svg>\n  );\n};\n\nexport const CalendarIcon = ({ className }: { className?: string }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      className={\"h-6 w-6\" + className}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z\"\n      />\n    </svg>\n  );\n};\n\nexport const RocketIcon = ({ animate }: { animate?: boolean }) => {\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      strokeWidth=\"1.5\"\n      stroke=\"currentColor\"\n      className=\"h-6 w-6\"\n    >\n      <motion.path\n        initial={{ pathLength: animate ? 0 : 1 }}\n        animate={{ pathLength: 1 }}\n        transition={{ duration: 2, ease: \"easeInOut\" }}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M15.59 14.37a6 6 0 01-5.84 7.38v-4.8m5.84-2.58a14.98 14.98 0 006.16-12.12A14.98 14.98 0 009.631 8.41m5.96 5.96a14.926 14.926 0 01-5.841 2.58m-.119-8.54a6 6 0 00-7.381 5.84h4.8m2.581-5.84a14.927 14.927 0 00-2.58 5.84m2.699 2.7c-.103.021-.207.041-.311.06a15.09 15.09 0 01-2.448-2.448 14.9 14.9 0 01.06-.312m-2.24 2.39a4.493 4.493 0 00-1.757 4.306 4.493 4.493 0 004.306-1.758M16.5 9a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z\"\n      />\n    </motion.svg>\n  );\n};\n\nexport const CheckIcon = ({ animate }: { animate: boolean }) => {\n  return (\n    <motion.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"1.5\"\n      stroke=\"currentColor\"\n      className=\"h-6 w-6\"\n    >\n      <motion.path\n        initial={{\n          pathLength: 0,\n        }}\n        animate={\n          animate\n            ? {\n                scale: [0, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                pathLength: [0, 0.2, 0.4, 0.6, 0.8, 0.9, 0.95, 0.98, 0.99, 1],\n              }\n            : {}\n        }\n        transition={{\n          duration: 1,\n        }}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n      />\n    </motion.svg>\n  );\n};\n", "import { create } from \"zustand\";\nimport { devtools, persist } from \"zustand/middleware\";\nimport type { VacationEntity } from \"../domain/vacation\";\nimport type { ActivityEntity } from \"../domain/activity\";\n\ninterface BearState {\n  vacation: VacationEntity;\n  selectedDay: Date;\n}\n\nexport const useVacationStore = create<BearState>()(\n  devtools(\n    // persist(\n    (set, get) => ({\n      vacation: {} as VacationEntity,\n      selectedDay: new Date(),\n    }),\n    {\n      name: \"vacation-store\",\n    }\n  )\n);\n\nexport const selectDay = (date: Date) =>\n  useVacationStore.setState((state) => ({ selectedDay: date }), false, {\n    type: \"SELECT_DAY\",\n    date,\n  });\n\nexport const selectActivity = (activity: ActivityEntity) => {\n  useVacationStore.setState(\n    (state) => {\n      const vacation = state.vacation;\n      vacation.setPendingActivity(activity);\n      return { vacation };\n    },\n    false,\n    {\n      type: \"SELECT_ACTIVITY\",\n      activity: activity,\n    }\n  );\n};\n\nexport const closeAcitivtyModal = () => {\n  useVacationStore.setState(\n    (state) => {\n      const vacation = state.vacation;\n      vacation.setPendingActivity(null);\n      return { vacation };\n    },\n    false,\n    {\n      type: \"CLOSE_ACTIVITY_MODAL\",\n    }\n  );\n};\n\nexport const initVacation = (vacation: VacationEntity) => {\n  useVacationStore.setState(\n    (state) => {\n      return { vacation };\n    },\n    false,\n    {\n      type: \"INIT_VACATION\",\n      vacation: vacation,\n    }\n  );\n};\n", "import { useActionData, useSubmit, useNavigation } from \"@remix-run/react\";\nimport React from \"react\";\nimport { useVacationStore } from \"../../store/vacation-store\";\n\nexport const useActivityBookingBottomSheet = () => {\n  // LOCAL STATE\n  const [bookTime, setBookTime] = React.useState(false);\n  const [activityIsBooked, setActivityIsBooked] = React.useState(false);\n\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  //   GLOBAL STATE\n  const closeAcitivtyModal = useVacationStore(\n    (state) => state.closeAcitivtyModal\n  );\n\n  const vacation = useVacationStore((state) => state.vacation);\n\n  //   PARSE ACTION DATA\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  const activityHasFixedDate = vacation.pendingActivityHasFixedDate;\n  const inputDefaultDate = vacation.startDatePendingActivity;\n\n  const handleClickBookTime = () => {\n    setBookTime(true);\n  };\n\n  const handleClickConfirm = () => {\n    const datetime = inputRef.current?.value ?? \"\";\n    const formData = new FormData();\n\n    formData.append(\"datetime\", datetime);\n    formData.append(\"activityId\", vacation.pendingActivity?.props?.id ?? \"\");\n\n    submit(formData, {\n      method: \"post\",\n    });\n  };\n\n  React.useEffect(\n    function closeAcitivtyModalAfterTimeout() {\n      if (actionData?.success && navigation.state === \"loading\") {\n        // we are seeting the local variable to true => activityIsBooked AND\n        // we using a timeout so we can show an success animation before closing the modal\n        setActivityIsBooked(true);\n        setTimeout(closeAcitivtyModal, 1000);\n      }\n    },\n    [actionData?.success, closeAcitivtyModal, navigation.state]\n  );\n\n  return {\n    bookTime,\n    activityIsBooked,\n    inputRef,\n    activityHasFixedDate,\n    inputDefaultDate,\n    isSubmitting,\n    closeAcitivtyModal,\n    handleClickBookTime,\n    handleClickConfirm,\n  };\n};\n", "import { CalendarIcon } from \"@heroicons/react/20/solid\";\n// TODO REMOVE THIS\nimport { format } from \"date-fns\";\nimport { motion } from \"framer-motion\";\nimport { Badge } from \"~/components/badge\";\nimport { RocketIcon, SettingsIcon } from \"~/components/icons\";\nimport type { ActivityEntity } from \"../domain/activity\";\nimport { selectActivity, useVacationStore } from \"../store/vacation-store\";\n\nexport const ActivityList = ({\n  activities,\n  title,\n}: {\n  activities: ActivityEntity[];\n  title: string;\n}) => {\n  return (\n    <div className=\"mx-auto w-full flex-1 pb-2 pl-2 md:container md:rounded-3xl\">\n      <div className=\"flex h-full flex-col\">\n        <div className=\"flex flex-row items-center space-x-4 px-4 pb-1 pt-4\">\n          <div className=\"grid h-10 w-10 place-items-center rounded-xl   bg-purple-200 p-2\">\n            <RocketIcon />\n          </div>\n          <h1 className=\"text-left text-lg font-bold\">{title}</h1>\n        </div>\n\n        {/* CARD LIST */}\n        {activities.length ? (\n          <ul className=\"flex flex-1 flex-col gap-4 overflow-scroll px-2 pt-2\">\n            {activities.map((item, index) => {\n              return (\n                <motion.li\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: 0.5 }}\n                  key={index}\n                  className=\"px-2\"\n                >\n                  <CardItem\n                    onClick={() => selectActivity(item)}\n                    key={index}\n                    activity={item}\n                  />\n                </motion.li>\n              );\n            })}\n          </ul>\n        ) : (\n          <div className=\"flex flex-1 flex-col items-center justify-center\">\n            <div className=\"grid h-20 w-20 place-items-center rounded-xl bg-purple-200  p-2 pb-2\">\n              <RocketIcon />\n            </div>\n            <p className=\"text-night-700 text-lg font-bold\">No activities</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst CardItem = ({\n  onClick,\n  activity,\n}: {\n  onClick: () => void;\n  activity: ActivityEntity;\n}) => {\n  const vacation = useVacationStore((state) => state.vacation);\n\n  // date is not set -> user must set it\n  const isUnallocated = vacation.getActivityIsUnallocated(activity);\n  // date cannot be changed by the user\n  const isFixed = vacation.getActivityHasFixedDate(activity);\n\n  return (\n    <motion.div\n      whileTap={{ scale: 0.95 }}\n      animate={{\n        border: isUnallocated\n          ? \"2px solid #FBBF24\"\n          : isFixed\n          ? \"2px solid #374151\"\n          : \"2px solid #10B981\",\n      }}\n      onClick={onClick}\n      className=\"border-night-700 flex w-full flex-col gap-3 rounded-2xl border-[2px] p-2 px-4\"\n    >\n      <div className=\"flex w-full flex-row  justify-between\">\n        <h2 className=\"text-md font-bold\">{activity.name}</h2>\n\n        <div>\n          <button className=\"hover:bg-night-700/10 rounded-full p-1\">\n            <SettingsIcon />\n          </button>\n        </div>\n      </div>\n\n      {/* tags */}\n      <div className=\"flex w-full flex-row justify-between gap-2\">\n        <div className=\"flex flex-1 flex-row gap-1\">\n          {activity.tags.map((tag, index) => {\n            return (\n              <Badge key={index} color={tag.color}>\n                {tag.label}\n              </Badge>\n            );\n          })}\n        </div>\n\n        {isUnallocated ? (\n          <div className=\"flex flex-1 flex-row justify-center\">\n            <button className=\"border-accent-yellow hover:bg-night-700/10 rounded-md border-[2px] p-1 px-2 py-1\">\n              <p className=\"text-xs\">Book a slot</p>\n            </button>\n          </div>\n        ) : null}\n      </div>\n\n      {/* meta */}\n      <div className=\"flex flex-row items-center justify-between gap-2\">\n        <div className=\"flex flex-row items-center gap-1\">\n          <div>\n            <CalendarIcon className=\"h-4 w-4\" />\n          </div>\n          {activity.datetime ? (\n            <p className=\"text-xs \">\n              {format(new Date(activity.datetime), \"dd MMM yyyy 'at' HH:mm\")}{\" \"}\n              {isFixed ? \"(Fixed Time)\" : \"\"}\n            </p>\n          ) : (\n            <p className=\"text-xs \">Not scheduled yet</p>\n          )}\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n", "export const Badge = ({\n  color,\n  children,\n}: {\n  color: string;\n  children: React.ReactNode;\n}) => {\n  const ColorDict = {\n    red: \"bg-red-100 text-red-800\",\n    green: \"bg-green-100 text-green-800\",\n    blue: \"bg-blue-100 text-blue-800\",\n    yellow: \"bg-yellow-100 text-yellow-800\",\n    purple: \"bg-purple-100 text-purple-800\",\n    pink: \"bg-pink-100 text-pink-800\",\n    indigo: \"bg-indigo-100 text-indigo-800\",\n    gray: \"bg-gray-100 text-gray-800\",\n    night: \"bg-night-100 text-night-800\",\n  };\n  const colorClasses =\n    ColorDict[color as keyof typeof ColorDict] || \"bg-gray-100 text-gray-800\";\n  return (\n    <span\n      className={`${colorClasses} text-night-700 inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ring-1 ring-inset ring-gray-500/10`}\n    >\n      {children}\n    </span>\n  );\n};\n", "import invariant from \"tiny-invariant\";\nimport { isLoggedIn } from \"~/utils/helper\";\nimport { createAction, createLoader } from \"~/utils/stuff.server\";\nimport type { VacationDtoProps } from \"../dto/vacation-dto\";\n\ninterface LoaderData {\n  vacation: VacationDtoProps;\n}\n\nexport const vacationLoader = createLoader(\n  async ({ repository, request }): Promise<LoaderData> => {\n    await isLoggedIn(request);\n\n    const vacation = await repository.vacation.getVacationById(\n      \"rec_chro3uqqsbcn5poqocb0\"\n    );\n    return { vacation };\n  }\n);\n\nexport const vacationAction = createAction(async ({ request, repository }) => {\n  const formData = await request.formData();\n  const datetime = formData.get(\"datetime\");\n  const activityId = formData.get(\"activityId\");\n\n  invariant(datetime, \"datetime is required\");\n  invariant(activityId, \"activityId is required\");\n\n  await repository.activity.confirmDate(\n    activityId as string,\n    new Date(datetime as string).toISOString()\n  );\n\n  return {\n    success: true,\n  };\n});\n", "import type { XataClient } from \"utils/xata\";\nimport type { VacationRepo } from \"../vacationRepo\";\nimport type { VacationDtoProps } from \"../../dto/vacation-dto\";\nimport type { ActivityRepo } from \"../activityRepo\";\n\nexport class ActivityRepoXata implements ActivityRepo {\n  private client: XataClient;\n\n  constructor(client: XataClient) {\n    this.client = client;\n  }\n  async confirmDate(activityId: string, date: string): Promise<void> {\n    const activity = await this.client.db.ActivityBooking.filter({\n      id: activityId,\n    }).getFirst();\n\n    if (!activity) {\n      throw new Error(`Activity ${activityId} not found`);\n    }\n\n    await activity.update({\n      datetime: new Date(date).toISOString(),\n    });\n  }\n}\n", "import type { XataClient } from \"utils/xata\";\nimport type {\n  ActivityBookingInterface,\n  VacationDtoProps,\n} from \"../../dto/vacation-dto\";\nimport type { VacationRepo } from \"../vacationRepo\";\n\nexport class VacationRepoXata implements VacationRepo {\n  private client: XataClient;\n\n  constructor(client: XataClient) {\n    this.client = client;\n  }\n\n  async getVacationById(id: string) {\n    const vacation = await this.client.db.Vacation.select([\"*\", \"location.*\"])\n      //   .filter({ user: user?.id })\n      .filter({ id })\n      .getFirst();\n\n    const activitiesResult = await this.client.db.VacationActivity.select([\n      \"activity.activity.*\",\n      \"activity.*\",\n    ])\n      .filter({ vacation: vacation?.id })\n      .getAll();\n\n    if (!vacation) {\n      throw new Error(\"Vacation not found\");\n    }\n\n    if (!activitiesResult) {\n      throw new Error(\"Activities not found\");\n    }\n\n    const tags = await this.client.db.AcivityTag.select([\n      \"activity.id\",\n      \"tag.*\",\n      \"tag.color.*\",\n    ]).getAll();\n\n    const activities: ActivityBookingInterface[] = activitiesResult.map((a) => {\n      const tagsOfActivity = tags.filter(\n        (t) => t.activity?.id === a.activity?.id\n      );\n\n      const activity = a.activity;\n      if (!activity) {\n        throw new Error(\"Activity not found\");\n      }\n      return {\n        ...activity,\n        name: activity?.activity?.name || \"\",\n        id: activity?.id || \"\",\n        tags: tagsOfActivity.map((t) => ({\n          id: t.tag?.id || \"\",\n          label: t.tag?.label || \"\",\n          color: t.tag?.color?.name || \"\",\n        })),\n\n        isFixedDate: activity?.isFixedDate || false,\n        description: activity?.activity?.description || \"\",\n        datetime: activity?.datetime?.toISOString() || undefined,\n      };\n    });\n\n    const location = vacation.location;\n\n    if (!location) {\n      throw new Error(\"Location not found\");\n    }\n\n    const dto: VacationDtoProps = {\n      location: {\n        name: location?.name || \"\",\n        description: location?.description || \"\",\n      },\n      vacation: {\n        ...vacation,\n        endDate: vacation?.endDate?.toISOString() || \"\",\n        startDate: vacation?.startDate?.toISOString() || \"\",\n        description: vacation?.description || \"\",\n      },\n      tags: tags.map((t) => ({\n        id: t.tag?.id || \"\",\n        label: t.tag?.label || \"\",\n        color: t.tag?.color?.name || \"\",\n      })),\n      activities: activities.map((a) => ({\n        ...a,\n        datetime: a.datetime || undefined,\n      })),\n    };\n\n    return dto;\n  }\n}\n", "import type { DataFunctionArgs } from \"@remix-run/node\";\nimport { getXataClient } from \"utils/xata\";\nimport type { ActivityRepo } from \"~/features/vacation/repos/activityRepo\";\nimport { ActivityRepoXata } from \"~/features/vacation/repos/implementations/activityRepoXata\";\nimport { VacationRepoXata } from \"~/features/vacation/repos/implementations/vacationRepoXata\";\nimport type { VacationRepo } from \"~/features/vacation/repos/vacationRepo\";\nimport type { ActionFunctionArgs, PageHandler } from \"./lib/core\";\n\nconsole.log(\"____stuff.server.ts\");\n\nexport class AddHandlerServer implements PageHandler {\n  async makeRequest(props: ActionFunctionArgs) {\n    const { config } = props;\n\n    await config.onAdd(props);\n  }\n}\n\ninterface Repository {\n  vacation: VacationRepo;\n  activity: ActivityRepo;\n}\n\nconst client = getXataClient();\n\nconst initDataFunctions = (args: { repository: Repository }) => {\n  const { repository } = args;\n\n  const createLoader = <T>(\n    loader: (\n      args: DataFunctionArgs & {\n        repository: Repository;\n      }\n    ) => T\n  ) => {\n    return async (args: DataFunctionArgs) => {\n      return loader({ ...args, repository });\n    };\n  };\n\n  return { createLoader, createAction: createLoader };\n};\n\nexport const { createLoader, createAction } = initDataFunctions({\n  repository: {\n    vacation: new VacationRepoXata(client),\n    activity: new ActivityRepoXata(client),\n  },\n});\n", "import React from \"react\";\nimport { type DateRange, DayPicker } from \"react-day-picker\";\nimport { selectDay, useVacationStore } from \"../store/vacation-store\";\n\nexport const VacationDatePicker = () => {\n  const vacation = useVacationStore((state) => state.vacation);\n\n  const vacationRange: DateRange = {\n    from: vacation.startDate,\n    to: vacation.endDate,\n  };\n\n  return (\n    <DayPicker\n      fromMonth={vacation.startDate}\n      onDayClick={selectDay}\n      selected={vacationRange}\n    />\n  );\n};\n", "const isEntity = (v: any): v is Entity<any> => {\n  return v instanceof Entity;\n};\n\nexport abstract class Entity<T> {\n  protected readonly _id: string;\n  public readonly props: T;\n\n  constructor(props: T, id?: string) {\n    this._id = id ? id : \"\";\n    this.props = props;\n  }\n\n  public equals(object?: Entity<T>): boolean {\n    if (object == null || object == undefined) {\n      return false;\n    }\n\n    if (this === object) {\n      return true;\n    }\n\n    if (!isEntity(object)) {\n      return false;\n    }\n\n    return this._id === object._id;\n  }\n}\n", "import { Entity } from \"~/shared/domain/entity\";\nimport type { LocationEntity } from \"./location\";\nimport type { ActivityEntity } from \"./activity\";\nimport type { DateValueObject } from \"./date\";\nimport { fromJSON } from \"postcss\";\nimport { Vacation } from \"utils/xata\";\n\ninterface VacationProps {\n  activities: ActivityEntity[];\n  location: LocationEntity;\n  id: string;\n  startDate: DateValueObject;\n  endDate: DateValueObject;\n}\n\nexport class VacationEntity extends Entity<VacationProps> {\n  private _pendingActivity: ActivityEntity | null = null;\n\n  private constructor(props: VacationProps, id?: string) {\n    super(props, id);\n  }\n\n  static create(props: VacationProps, id?: string) {\n    return new VacationEntity(props, id);\n  }\n\n  get startDate() {\n    return this.props.startDate.value;\n  }\n\n  get endDate() {\n    return this.props.endDate.value;\n  }\n\n  static fromJSON(json: VacationProps) {\n    return VacationEntity.create(json, json.id);\n  }\n\n  getActivityAtDate(date: Date) {\n    return this.props.activities.filter((activity) => {\n      if (!activity.props.datetime) return false;\n      return activity.isSameDate(date);\n    });\n  }\n\n  getUnallocatedActivities() {\n    return this.props.activities.filter((a) => a.isUnallocated);\n  }\n\n  setPendingActivity(activity: ActivityEntity | null) {\n    this._pendingActivity = activity;\n  }\n\n  get pendingActivity() {\n    return this._pendingActivity;\n  }\n\n  get pendingActivityHasFixedDate() {\n    return this._pendingActivity?.props.isFixedDate;\n  }\n\n  get startDatePendingActivity() {\n    const _date = this.pendingActivity?.props.datetime;\n    return _date ? _date.value?.toISOString().slice(0, 16) : null;\n  }\n\n  getActivityIsUnallocated(activity: ActivityEntity) {\n    return activity.isUnallocated;\n  }\n\n  getActivityHasFixedDate(activity: ActivityEntity) {\n    return activity.props.isFixedDate && activity.props.datetime;\n  }\n}\n", "import { Entity } from \"~/shared/domain/entity\";\n\ninterface LocationProps {\n  name: string;\n  description: string;\n}\n\nexport class LocationEntity extends Entity<LocationProps> {\n  private constructor(props: LocationProps, id?: string) {\n    super(props, id);\n  }\n\n  static create(props: LocationProps, id?: string) {\n    if (!props.name) {\n      throw new Error(\"Location name is required\");\n    }\n\n    return new LocationEntity(props, id);\n  }\n}\n", "interface ValueObjectProps {\n  [index: string]: any;\n}\n\n/**\n * @desc ValueObjects are objects that we determine their\n * equality through their structrual property.\n */\n\nexport abstract class ValueObject<T extends ValueObjectProps> {\n  public props: T;\n\n  constructor(props: T) {\n    let baseProps: any = {\n      ...props,\n    };\n\n    this.props = baseProps;\n  }\n\n  public equals(vo?: ValueObject<T>): boolean {\n    if (vo === null || vo === undefined) {\n      return false;\n    }\n    if (vo.props === undefined) {\n      return false;\n    }\n    return JSON.stringify(this.props) === JSON.stringify(vo.props);\n  }\n}\n", "import { ValueObject } from \"~/shared/domain\";\n\ninterface TagProps {\n  label: string;\n  color: string;\n}\n\nexport class TagValueObject extends ValueObject<TagProps> {\n  private constructor(props: TagProps) {\n    super(props);\n  }\n\n  public static create(props: TagProps) {\n    return new TagValueObject(props);\n  }\n\n  public get label() {\n    return this.props.label;\n  }\n\n  public get color() {\n    return this.props.color;\n  }\n}\n", "import { Entity } from \"~/shared/domain/entity\";\nimport type { TagValueObject } from \"./tag\";\nimport type { DateValueObject } from \"./date\";\nimport type { ActivityNameValueObject } from \"./activity-name\";\nimport type { ActivityDescriptionValueObject } from \"./activity-description\";\n\ninterface ActivityProps {\n  tags: TagValueObject[];\n  isFixedDate: boolean;\n  datetime?: DateValueObject;\n  name: ActivityNameValueObject;\n  description: ActivityDescriptionValueObject;\n  id: string;\n}\n\nexport class ActivityEntity extends Entity<ActivityProps> {\n  private constructor(props: ActivityProps) {\n    super(props);\n  }\n\n  public static create(props: ActivityProps) {\n    return new ActivityEntity(props);\n  }\n\n  public isSameDate(date: Date) {\n    return (\n      this.props.datetime?.value?.getFullYear() === date?.getFullYear() &&\n      this.props.datetime?.value?.getMonth() === date?.getMonth() &&\n      this.props.datetime?.value?.getDate() === date?.getDate()\n    );\n  }\n\n  public get isUnallocated() {\n    return !this.props.datetime?.value;\n  }\n\n  public get isFixedDate() {\n    return this.props.isFixedDate;\n  }\n\n  public get datetime() {\n    return this.props.datetime?.value;\n  }\n\n  public get name() {\n    return this.props.name.props.value;\n  }\n\n  public get tags() {\n    return this.props.tags;\n  }\n}\n", "import { ValueObject } from \"~/shared/domain\";\n\ninterface DateValueObjectProps {\n  value?: string;\n}\n\nexport class DateValueObject extends ValueObject<DateValueObjectProps> {\n  private constructor(props: DateValueObjectProps) {\n    super(props);\n  }\n\n  get value() {\n    if (!this.props.value) return undefined;\n    return new Date(this.props.value);\n  }\n\n  static create(props: DateValueObjectProps) {\n    return new DateValueObject(props);\n  }\n}\n", "import { ValueObject } from \"~/shared/domain\";\n\ninterface ActivityNameProps {\n  value: string;\n}\n\nexport class ActivityNameValueObject extends ValueObject<ActivityNameProps> {\n  static minLength = 3;\n  static maxLength = 40;\n  private constructor(props: ActivityNameProps) {\n    super(props);\n  }\n\n  static create(props: ActivityNameProps) {\n    if (props.value.length < ActivityNameValueObject.minLength) {\n      throw new Error(\n        `Activity name must be at least ${ActivityNameValueObject.minLength}`\n      );\n    } else if (props.value.length > ActivityNameValueObject.maxLength) {\n      throw new Error(\n        `Activity name must be at most ${ActivityNameValueObject.maxLength}`\n      );\n    }\n\n    return new ActivityNameValueObject(props);\n  }\n}\n", "import { ValueObject } from \"~/shared/domain\";\n\ninterface ActivityDescriptionProps {\n  value: string;\n}\n\nexport class ActivityDescriptionValueObject extends ValueObject<ActivityDescriptionProps> {\n  static minLength = 0;\n  static maxLength = 500;\n  private constructor(props: ActivityDescriptionProps) {\n    super(props);\n  }\n\n  static create(props: ActivityDescriptionProps) {\n    if (props.value.length < ActivityDescriptionValueObject.minLength) {\n      throw new Error(\n        `Activity name must be at least ${ActivityDescriptionValueObject.minLength}`\n      );\n    } else if (props.value.length > ActivityDescriptionValueObject.maxLength) {\n      throw new Error(\n        `Activity name must be at most ${ActivityDescriptionValueObject.maxLength}`\n      );\n    }\n\n    return new ActivityDescriptionValueObject(props);\n  }\n}\n", "// export class PostMap implements Mapper<Post> {\n\nimport { VacationEntity } from \"../domain/vacation\";\nimport { LocationEntity } from \"../domain/location\";\nimport { TagValueObject } from \"../domain/tag\";\nimport { ActivityEntity } from \"../domain/activity\";\nimport { DateValueObject } from \"../domain/date\";\nimport { ActivityNameValueObject } from \"../domain/activity-name\";\nimport { ActivityDescriptionValueObject } from \"../domain/activity-description\";\nimport { VacationDtoProps } from \"../dto/vacation-dto\";\n\n//     public static toDomain (raw: any): Post {\n//       const postType: PostType = raw.type;\n\n//       const postOrError = Post.create({\n//         memberId: MemberId.create(new UniqueEntityID(raw.member_id)).getValue(),\n//         slug: PostSlug.createFromExisting(raw.slug).getValue(),\n//         title: PostTitle.create({ value: raw.title }).getValue(),\n//         type: postType,\n//         text: postType === 'text' ? PostText.create({ value: raw.text }).getValue() : null,\n//         link: postType === 'link' ? PostLink.create({ url: raw.link }).getValue() : null,\n//         points: raw.points,\n//         totalNumComments: raw.total_num_comments\n//       }, new UniqueEntityID(raw.post_id))\n\n//       postOrError.isFailure ? console.log(postOrError.getErrorValue()) : '';\n\n//       return postOrError.isSuccess ? postOrError.getValue() : null;\n//     }\n\n//     public static toPersistence (post: Post): any {\n//       return {\n//         total_num_comments: post.totalNumComments,\n//         updatedAt: new Date().toString(),\n//         title: post.title.value,\n//         post_id: post.postId.getStringValue(),\n//         member_id: post.memberId.getStringValue(),\n//         text: post.isTextPost() ? post.text.value : null,\n//         slug: post.slug.value,\n//         points: post.points,\n//         type: post.type,\n//         link: post.isLinkPost() ? post.link.url : null,\n//       }\n//     }\n//   }\n\nexport class VacationMap {\n  public static toDomain({\n    location,\n    activities,\n    tags,\n    vacation,\n  }: VacationDtoProps): VacationEntity {\n    if (!location) throw new Error(\"location not found\");\n\n    const _location = LocationEntity.create({\n      name: location.name || \"\",\n      description: location.description || \"\",\n    });\n\n    const _tags = tags.map((t) =>\n      TagValueObject.create({\n        label: t.label || \"\",\n        color: t.color || \"\",\n      })\n    );\n\n    const _activities = activities.map((a) =>\n      ActivityEntity.create({\n        id: a.id || \"\",\n        datetime: DateValueObject.create({\n          value: a.datetime?.toString() || undefined,\n        }),\n        isFixedDate: a.isFixedDate || false,\n        name: ActivityNameValueObject.create({ value: a.name || \"\" }),\n        description: ActivityDescriptionValueObject.create({\n          value: a.description || \"\",\n        }),\n        tags: _tags,\n      })\n    );\n\n    return VacationEntity.create({\n      id: vacation.id || \"\",\n      startDate: DateValueObject.create({\n        value: vacation.startDate.toString(),\n      }),\n      endDate: DateValueObject.create({ value: vacation.endDate.toString() }),\n      location: _location,\n      activities: _activities,\n    });\n  }\n}\n", "import type { DataFunctionArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { Activity, Tag, getXataClient } from \"utils/xata\";\nimport { authenticator } from \"~/utils/auth.server\";\nimport { isLoggedIn } from \"~/utils/helper\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"New Remix App\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\ntype ActivityModel = Activity & {\n  tags: Tag[];\n};\n\n// export const loader = async ({ request }: DataFunctionArgs) => {\n//   await isLoggedIn(request);\n\n//   try {\n//     const client = getXataClient();\n\n//     const data = await getXataClient().db.Tag.getMany();\n\n//     const activityRaw = await client.db.Activity.select([\"*\"])\n//       .filter({\n//         name: { $contains: \"Fitness\" },\n//       })\n//       .getFirst();\n\n//     const tags = await client.db.AcivityTag.select([\"tag.*\"])\n//       .filter({\n//         \"activity.name\": { $contains: \"Fitness\" },\n//       })\n//       .getMany();\n\n//     if (!activityRaw) {\n//       throw new Error(\"Activity not found\");\n//     }\n\n//     const activity: ActivityModel = {\n//       ...activityRaw,\n//       tags: tags.map((tag) => tag.tag).filter(Boolean) as Tag[],\n//     };\n\n//     return {\n//       tags: data,\n//       activity,\n//     };\n//   } catch (error) {\n//     console.log(\"__ERROR__\", error);\n//     throw new Error(\"Something went wrong!!!\");\n//   }\n// };\n\n// export const action = async ({ request }: DataFunctionArgs) => {\n//   const form = await request.formData();\n//   const action = form.get(\"action\") as string;\n\n//   if (action === \"logout\") {\n//     await authenticator.logout(request, { redirectTo: \"/login\" });\n\n//     return {};\n//   }\n\n//   try {\n//     await getXataClient().db.Tag.create({\n//       label: \"fun\",\n//       color: \"blue\",\n//     });\n//     return {};\n//   } catch (error) {\n//     return {\n//       error: {\n//         status: 500,\n//         message: \"Something went wrong\",\n//       },\n//     };\n//   }\n// };\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.8\" }}>\n      HELLO WORLD\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  return (\n    <div>\n      <h1>Oh no, an error occurred!</h1>\n      <pre>{JSON.stringify(error)}</pre>\n    </div>\n  );\n}\n", "import type { ActionFunction, DataFunctionArgs } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport bcrypt from \"bcryptjs\";\nimport invariant from \"tiny-invariant\";\nimport { authenticator } from \"~/utils/auth.server\";\nimport { isLoggedIn } from \"~/utils/helper\";\nimport { getXataClient } from \"utils/xata\";\n\nexport const loader = async ({ request }: DataFunctionArgs) => {\n  await isLoggedIn(request, { successRedirect: \"/\" });\n\n  return {};\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const form = await request.formData();\n  const email = form.get(\"email\") as string;\n  const password = form.get(\"password\") as string;\n\n  invariant(email, \"email is required\");\n  invariant(password, \"password is required\");\n\n  const salt = await bcrypt.genSalt(10);\n  const hashedPassword = await bcrypt.hash(password, salt);\n\n  const xata = getXataClient();\n\n  await xata.db.User.create({ email, password: hashedPassword });\n\n  // authenticator.authenticate('')\n  return await authenticator.authenticate(\"form\", request, {\n    successRedirect: \"/\",\n    failureRedirect: \"/login\",\n    context: { formData: form },\n  });\n};\n\nexport default function Login() {\n  // useActionData<typeof action>();\n\n  return (\n    <div>\n      <h1>SIGN UP</h1>\n\n      <Form method=\"post\">\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\" defaultValue={\"a@a.de\"} name=\"email\" id=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          defaultValue={\"1234\"}\n          name=\"password\"\n          id=\"password\"\n        />\n        <button className=\"bg-red-300\" type=\"submit\">\n          SIGN UP\n        </button>\n      </Form>\n    </div>\n  );\n}\n", "import type { DataFunctionArgs } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { getXataClient } from \"utils/xata\";\nimport { authenticator } from \"~/utils/auth.server\";\nimport { authenticate, isLoggedIn } from \"~/utils/helper\";\n\nexport const loader = async ({ request }: DataFunctionArgs) => {\n  // await isLoggedIn(request, {\n  //   successRedirect: \"/\",\n  // });\n\n  return {\n    data: {},\n  };\n};\n\nexport const action = async ({ request }: DataFunctionArgs) => {\n  console.log(\"LOGIN...\");\n  const form = await request.formData();\n  const email = form.get(\"email\") as string;\n  const password = form.get(\"password\") as string;\n  console.log(\"LOGIN...\", email, password);\n\n  try {\n    await authenticate(request);\n    console.log(\"Done\");\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n};\n\nexport default function Login() {\n  const data = useActionData<typeof action>();\n\n  return (\n    <div>\n      <h1>Login</h1>\n\n      <Form method=\"post\">\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\" defaultValue={\"a@a.de\"} name=\"email\" id=\"email\" />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          defaultValue={\"1234\"}\n          name=\"password\"\n          id=\"password\"\n        />\n        <button type=\"submit\">Login</button>\n      </Form>\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-QUQUU2YC.js','imports':['/build/_shared/chunk-OKBCQ2CQ.js','/build/_shared/chunk-MTLEV7TZ.js','/build/_shared/chunk-7T2XWYFJ.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-WXXXBMEZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-LLH4AQSP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-G5B5VAQJ.js','imports':['/build/_shared/chunk-KOEEVHRP.js','/build/_shared/chunk-VHBM3OKI.js','/build/_shared/chunk-6TFKTU3J.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.$model':{'id':'routes/admin.$model','parentId':'routes/admin','path':':model','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.$model-47YREACD.js','imports':['/build/_shared/chunk-KDU7PAPT.js','/build/_shared/chunk-IYD4CINF.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.options':{'id':'routes/api.options','parentId':'root','path':'api/options','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.options-L24YMT6R.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-AKMCHION.js','imports':['/build/_shared/chunk-6TFKTU3J.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/signup':{'id':'routes/signup','parentId':'root','path':'signup','index':undefined,'caseSensitive':undefined,'module':'/build/routes/signup-GHJTJ3IS.js','imports':['/build/_shared/chunk-IYD4CINF.js','/build/_shared/chunk-6TFKTU3J.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/vacation':{'id':'routes/vacation','parentId':'root','path':'vacation','index':undefined,'caseSensitive':undefined,'module':'/build/routes/vacation-QVBSKLAQ.js','imports':['/build/_shared/chunk-KDU7PAPT.js','/build/_shared/chunk-VHBM3OKI.js','/build/_shared/chunk-6TFKTU3J.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'version':'9b6207fe','hmr':undefined,'url':'/build/manifest-9B6207FE.js'};", "\nimport * as entryServer from \"/Users/coding/Documents/code/reiseathleten-xata/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/admin.$model.tsx\";\nimport * as route2 from \"./routes/api.options.ts\";\nimport * as route3 from \"./routes/vacation.tsx\";\nimport * as route4 from \"./routes/_index.tsx\";\nimport * as route5 from \"./routes/signup.tsx\";\nimport * as route6 from \"./routes/admin.tsx\";\nimport * as route7 from \"./routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":false,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/admin.$model\": {\n      id: \"routes/admin.$model\",\n      parentId: \"routes/admin\",\n      path: \":model\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/api.options\": {\n      id: \"routes/api.options\",\n      parentId: \"root\",\n      path: \"api/options\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/vacation\": {\n      id: \"routes/vacation\",\n      parentId: \"root\",\n      path: \"vacation\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/signup\": {\n      id: \"routes/signup\",\n      parentId: \"root\",\n      path: \"signup\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_react", "import_remix_auth", "import_node", "bcrypt", "import_bcryptjs", "import_jsx_dev_runtime", "query", "import_react", "import_solid", "import_jsx_dev_runtime", "SaveButton", "RemixForm", "defaultOptions", "React", "import_react", "import_solid", "import_jsx_dev_runtime", "import_react", "import_outline", "import_solid", "import_jsx_dev_runtime", "classNames", "import_react", "import_solid", "import_jsx_dev_runtime", "checked", "action", "import_react", "import_react", "import_solid", "import_react", "import_jsx_dev_runtime", "Form", "SaveButton", "RemixForm", "DefaultInput", "ImageInput", "import_react", "import_outline", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "React", "Form", "import_react", "invariant", "data", "React", "import_react", "import_jsx_dev_runtime", "client", "import_jsx_dev_runtime", "import_react", "loader", "import_node", "import_tiny_invariant", "loader", "invariant", "field", "action", "loader", "import_react", "import_date_fns", "import_react", "import_react", "import_jsx_dev_runtime", "import_react", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "CheckIcon", "import_react", "React", "closeAcitivtyModal", "navigation", "import_jsx_dev_runtime", "closeAcitivtyModal", "CheckIcon", "import_solid", "import_framer_motion", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_tiny_invariant", "client", "client", "_a", "_b", "_c", "createLoader", "loader", "args", "invariant", "import_jsx_dev_runtime", "json", "import_jsx_dev_runtime", "loader", "action", "React", "ErrorBoundary", "Index", "import_jsx_dev_runtime", "action", "loader", "import_react", "import_bcryptjs", "import_tiny_invariant", "import_jsx_dev_runtime", "loader", "action", "invariant", "bcrypt", "action", "Login", "loader", "import_react", "import_jsx_dev_runtime", "loader", "action", "Login"]
}
